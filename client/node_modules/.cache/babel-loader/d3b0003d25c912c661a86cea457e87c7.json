{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/Result.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { serverIp, serverPort } from '../config';\nimport { Card } from 'react-bootstrap';\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registeredStudents: []\n    };\n    this.returnRegisteredStudents = this.returnRegisteredStudents.bind(this);\n  }\n\n  componentDidMount() {\n    axios.post(`${serverIp}:${serverPort}/fetchcomputedresult`, {\n      email: localStorage.getItem('email_current')\n    }).then(response => {\n      console.log('Response data in componentDidMount');\n      console.log(response.data); //get invite email no \n\n      this.setState({\n        registeredStudents: response.data\n      });\n    }).catch(err => {\n      console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n      window.alert('Error in connecting to server');\n    });\n  }\n\n  returnRegisteredStudents() {\n    return this.state.registeredStudents.map(eachStudent => {\n      // let imgSrc = `${serverIp}:${serverPort}/default.png`;\n      // if (eachStudent.profile_picture_url !== '') {\n      //   imgSrc = `${serverIp}:${serverPort}/${eachStudent.profile_picture_url}`;\n      // }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, eachStudent.email, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, eachStudent.sum)));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"friendlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    }), this.returnRegisteredStudents())));\n  } //   function splitPayments(payments) {\n  //     const people = Object.keys(payments);//\n  //     console.log(people)\n  //     const valuesPaid = Object.values(payments);\n  //   console.log(valuesPaid)\n  //     const sum = valuesPaid.reduce((acc, curr) => curr + acc);\n  //     const mean = sum / people.length;\n  //   console.log(mean)\n  //     const sortedPeople = people.sort((personA, personB) => payments[personA] - payments[personB]);\n  //     console.log(sortedPeople);\n  //     const sortedValuesPaid = sortedPeople.map((person) => payments[person] - mean);\n  //   console.log(sortedValuesPaid)\n  //     let i = 0;\n  //     let j = sortedPeople.length - 1;\n  //     let debt;\n  //     while (i < j) {\n  //       debt = Math.min(-(sortedValuesPaid[i]), sortedValuesPaid[j]);\n  //       console.log(debt);\n  //       sortedValuesPaid[i] += debt;\n  //       sortedValuesPaid[j] -= debt;\n  //       console.log(`${sortedPeople[i]} owes ${sortedPeople[j]} $${debt}`);\n  //       if (sortedValuesPaid[i] === 0) {\n  //         i++;\n  //       }\n  //       if (sortedValuesPaid[j] === 0) {\n  //         j--;\n  //       }\n  //     }\n  //   }\n  //   splitPayments(payments);\n  // }\n\n\n}\n\nexport default Result;\n\nfunction calculate(props) {\n  exp = 0;\n  owe = [];\n  owed = [];\n\n  if (props.user.expensis) {\n    console.log(\"****************************m kitni barri hu *********************************\");\n    props.user.expensis.forEach(element => {\n      if (element.data) {\n        exp += parseInt(element.data.ammount); //someone has to give you \n\n        if (element.data.ammount > 0) {\n          console.log(\"element.data.ammount>0\");\n          owed.push(element);\n          console.log(owed);\n        } //u need to give\n        else if (element.data.ammount < 0) {\n            console.log(\"element.data.ammount<0\"); // element.data.ammount = -(element.data.ammount);\n\n            owe.push(element); // owe[owe.length].data.ammount = -( owe[owe.length].data.ammount );\n\n            console.log(owe);\n          }\n      }\n    });\n  } // return exp;\n\n}\n\nconst Middle = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 6\n    }\n  }, calculate(props), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MidDash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DashHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 12\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn float-right settle\",\n    onClick: props.settle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }\n  }, \"Settle up\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn float-right expense\",\n    onClick: props.friend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 12\n    }\n  }, \"Add an expense\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fitting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 14\n    }\n  }, \"total balance\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 14\n    }\n  }, \"$ \", exp)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fitting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 14\n    }\n  }, \"you owe\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 14\n    }\n  }, \"$ \", exp < 0 ? exp : 0)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fitting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 14\n    }\n  }, \"you are owed\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 14\n    }\n  }, \"$ \", exp > 0 ? exp : 0)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"totalCollection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 12\n    }\n  }, \"YOU OWE\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"float-right mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 12\n    }\n  }, \"YOU ARE OWED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-left ml-3 borders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 12\n    }\n  }, owe.length == 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, \"You do not owe anything\") : owe.map(value => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"imgs\",\n    src: require(\"../../images/person-profile.png\"),\n    alt: \"\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, value.name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, \"you owe $\", -value.data.ammount)))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 12\n    }\n  }, owed.length == 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 32\n    }\n  }, \"You do not owe anything\") : owed.map(value => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"imgs\",\n    src: require(\"../../images/person-profile.png\"),\n    alt: \"\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 16\n    }\n  }, value.name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 16\n    }\n  }, \"owes you $\", value.data.ammount))))))));\n};","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/Result.js"],"names":["React","axios","serverIp","serverPort","Card","Result","Component","constructor","props","state","registeredStudents","returnRegisteredStudents","bind","componentDidMount","post","email","localStorage","getItem","then","response","console","log","data","setState","catch","err","window","alert","map","eachStudent","sum","render","calculate","exp","owe","owed","user","expensis","forEach","element","parseInt","ammount","push","Middle","settle","friend","color","length","value","require","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { serverIp, serverPort } from '../config';\nimport {\n    Card\n  } from 'react-bootstrap';\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     registeredStudents: [],\n    };\n    this.returnRegisteredStudents = this.returnRegisteredStudents.bind(this);\n    \n  }\n\n  componentDidMount() {\n    axios.post(`${serverIp}:${serverPort}/fetchcomputedresult`, { email: localStorage.getItem('email_current') })\n      .then((response) => {\n        console.log('Response data in componentDidMount');\n        console.log(response.data);\n        //get invite email no \n        this.setState({\n          registeredStudents: response.data,\n        });\n      }).catch((err) => {\n        console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n        window.alert('Error in connecting to server');\n     });\n\n  }\n\n\n\n\n\n\n\n\n\n  \n  \n  returnRegisteredStudents() {\n    return this.state.registeredStudents.map((eachStudent) => {\n      // let imgSrc = `${serverIp}:${serverPort}/default.png`;\n      // if (eachStudent.profile_picture_url !== '') {\n      //   imgSrc = `${serverIp}:${serverPort}/${eachStudent.profile_picture_url}`;\n      // }\n      return (\n        <div>\n           \n            <span>{eachStudent.email} </span>\n            <div>\n            <span>{eachStudent.sum}</span>\n            </div>\n          \n              \n        </div>\n      );\n\n    });\n       \n          \n  }\n  \n  \nrender()\n{\nreturn(\n<div>\n<ul>\n             <li className=\"friendlist\">\n               <i class=\"fas fa-user\"/>\n               \n               {this.returnRegisteredStudents()}\n               \n               </li>\n\n\n</ul>\n\n\n</div>\n);\n}\n\n\n  \n//   function splitPayments(payments) {\n//     const people = Object.keys(payments);//\n//     console.log(people)\n//     const valuesPaid = Object.values(payments);\n//   console.log(valuesPaid)\n//     const sum = valuesPaid.reduce((acc, curr) => curr + acc);\n//     const mean = sum / people.length;\n//   console.log(mean)\n//     const sortedPeople = people.sort((personA, personB) => payments[personA] - payments[personB]);\n//     console.log(sortedPeople);\n//     const sortedValuesPaid = sortedPeople.map((person) => payments[person] - mean);\n//   console.log(sortedValuesPaid)\n//     let i = 0;\n//     let j = sortedPeople.length - 1;\n//     let debt;\n  \n//     while (i < j) {\n//       debt = Math.min(-(sortedValuesPaid[i]), sortedValuesPaid[j]);\n//       console.log(debt);\n//       sortedValuesPaid[i] += debt;\n//       sortedValuesPaid[j] -= debt;\n  \n//       console.log(`${sortedPeople[i]} owes ${sortedPeople[j]} $${debt}`);\n  \n//       if (sortedValuesPaid[i] === 0) {\n//         i++;\n//       }\n  \n//       if (sortedValuesPaid[j] === 0) {\n//         j--;\n//       }\n//     }\n//   }\n  \n//   splitPayments(payments);\n  \n// }\n\n}\nexport default Result;\n\n\n\n\n\n\n\n\n\n\n\n\nfunction calculate(props){\n    exp = 0;\n    owe = [];\n    owed = [];\n    if(props.user.expensis){\n      console.log(\"****************************m kitni barri hu *********************************\");\n    props.user.expensis.forEach(element => {\n if(element.data){\n   exp += parseInt(element.data.ammount);\n   //someone has to give you \n       if(element.data.ammount>0){\n         \n         console.log(\"element.data.ammount>0\")\n         owed.push(element);\n         console.log(owed);\n       }//u need to give\n       else if(element.data.ammount<0){\n         console.log(\"element.data.ammount<0\");\n         // element.data.ammount = -(element.data.ammount);\n         owe.push(element);\n         // owe[owe.length].data.ammount = -( owe[owe.length].data.ammount );\n         console.log(owe);\n       }\n     }\n    });\n   }\n   // return exp;\n }\n \n  const Middle = props => {\n   return (\n     <div className=\"Middle\">\n       {calculate(props)}\n       \n       <div className=\"MidDash\">\n         <div className=\"DashHeader\">\n           <h3>Dashboard</h3>\n           <button className=\"btn float-right settle\" onClick={props.settle}>\n             Settle up\n           </button>\n           <button className=\"btn float-right expense\" onClick={props.friend}>\n             Add an expense\n           </button>\n         </div>\n \n         <div className=\"total\">\n           <div className=\"fitting\">\n             <label htmlFor=\"\">total balance</label>\n             <p className=\"green\">$ {exp}</p>\n           </div>\n           <div className=\"fitting\">\n             <label htmlFor=\"\">you owe</label>\n             <p style = {{color:\"red\"}}>$ {(exp<0)?exp:0}</p>\n           </div>\n           <div className=\"fitting\">\n             <label htmlFor=\"\">you are owed</label>\n             <p className=\"green\">$ {(exp>0)?exp:0}</p>\n           </div>\n         </div>\n       </div>\n \n       <div className=\"totalCollection\">\n         <div>\n           <label htmlFor=\"\">YOU OWE</label>\n         </div>\n         <div>\n           <label htmlFor=\"\" className=\"float-right mr-4\">\n             YOU ARE OWED\n           </label>\n         </div>\n       </div>\n       <div className = \"flex\">\n         <div className=\"float-left ml-3 borders\">\n           <ul>\n             {(owe.length == 0)?<li>You do not owe anything</li>:owe.map(value=>\n              <li>\n              <img\n                className=\"imgs\"\n                src={require(\"../../images/person-profile.png\")}\n                alt=\"\" align=\"left\"\n              />\n              <div className=\"inline\">\n                <h5>{value.name}</h5>\n                <span>you owe ${-(value.data.ammount)}</span>\n              </div>\n            </li>\n             )}\n             {/* <li>\n               <img\n                 className=\"imgs\"\n                 src={require(\"../../images/person-profile.png\")}\n                 alt=\"\" align=\"left\"\n               />\n               <div className=\"inline\">\n                 <h5>Ram</h5>\n                 <span>you owe $500</span>\n               </div>\n             </li> */}\n           </ul>\n         </div>\n \n \n \n         <div>\n           <ul>\n           {(owed.length == 0)?<li>You do not owe anything</li>:owed.map(value=>\n             <li>\n             <img\n               className=\"imgs\"\n               src={require(\"../../images/person-profile.png\")}\n               alt=\"\"\n               align=\"left\"\n             />\n             <div className=\"inline\">\n               <h5>{value.name}</h5>\n               <span>owes you ${value.data.ammount}</span>\n             </div>\n           </li>\n             )}\n \n             {/* <li>\n               <img\n                 className=\"imgs\"\n                 src={require(\"../../images/person-profile.png\")}\n                 alt=\"\"\n                 align=\"left\"\n               />\n               <div className=\"inline\">\n                 <h5>Ram</h5>\n                 <span>you owe $500</span>\n               </div>\n             </li> */}\n            \n             \n           </ul>\n         </div>\n       </div>\n     </div>\n   );\n };\n "]},"metadata":{},"sourceType":"module"}