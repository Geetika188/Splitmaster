{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/MiddleDashboard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../styles/Dashboard.css\";\nimport axios from 'axios';\nimport { serverIp, serverPort } from '../config';\nvar exp = 0;\nvar owe = [];\nvar owed = [];\n\nfunction calculate(props) {\n  exp = 0;\n  owe = [];\n  owed = []; //  if(props.user.expensis){\n  //    console.log(\"****************************m kitni barri hu *********************************\");\n  //    props.user.expensis.forEach(element => {\n  // if(element.data){\n  //   exp += parseInt(element.data.ammount);\n  //   //someone has to give you \n  //       if(element.data.ammount>0){\n  //         console.log(\"element.data.ammount>0\")\n  //         owed.push(element);\n  //         console.log(owed);\n  //       }//u need to give\n  //       else if(element.data.ammount<0){\n  //         console.log(\"element.data.ammount<0\");\n  //         // element.data.ammount = -(element.data.ammount);\n  //         owe.push(element);\n  //         // owe[owe.length].data.ammount = -( owe[owe.length].data.ammount );\n  //         console.log(owe);\n  //       }\n  //     }\n  //    });\n\n  let values = [];\n  registeredStudents.map(values => {\n    if (values.sum) {\n      exp += parseInt(values.sum); //   //someone has to give you \n\n      if (values.ammount > 0) {\n        console.log(\"element.data.ammount>0\");\n        owed.push(element);\n        console.log(owed);\n      } //u need to give\n      else if (values < 0) {\n          console.log(\"element.data.ammount<0\");\n          values.amount = -values.amount;\n          owe.push(element); //         // owe[owe.length].data.ammount = -( owe[owe.length].data.ammount );\n\n          console.log(owe);\n        }\n    }\n  });\n} // return exp;\n\n\nconst Middle = props => {\n  axios.post(`${serverIp}:${serverPort}/gettransactionsdatatotal`).then(response => {\n    console.log('Response data in componentDidMount');\n    console.log(response.data);\n    this.setState({\n      registeredStudents: response.data\n    });\n  }).catch(err => {\n    console.log(`Error in componentDidMount of fetchdata: ${err}`);\n    window.alert('Error in connecting to server');\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, calculate(props), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MidDash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DashHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn float-right settle\",\n    onClick: props.settle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Settle up\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn float-right expense\",\n    onClick: props.friend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Add an expense\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fitting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"total balance\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"$ \", exp)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fitting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"you owe\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"$ \", exp < 0 ? exp : 0)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fitting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"you are owed\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"$ \", exp > 0 ? exp : 0)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"totalCollection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"YOU OWE\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"float-right mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"YOU ARE OWED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-left ml-3 borders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, owe.length == 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 32\n    }\n  }, \"You do not owe anything\") : owe.map(value => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }\n  }, value.email), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }\n  }, \"you owe $\", -value.data.sum)))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, owed.length == 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 31\n    }\n  }, \"You do not owe anything\") : owed.map(value => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"imgs\",\n    src: require(\"../../images/person-profile.png\"),\n    alt: \"\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, value.name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"owes you $\", value.data.sum))))))));\n};\n\nconst mapStateToProps = state => {\n  console.log(\"state is  \", state);\n  return {\n    user: state.user\n  };\n};\n\nconst fn = connect(mapStateToProps);\nexport default fn(Middle);","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/MiddleDashboard.js"],"names":["React","connect","axios","serverIp","serverPort","exp","owe","owed","calculate","props","values","registeredStudents","map","sum","parseInt","ammount","console","log","push","element","amount","Middle","post","then","response","data","setState","catch","err","window","alert","settle","friend","color","length","value","email","require","name","mapStateToProps","state","user","fn"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../styles/Dashboard.css\";\r\nimport axios from 'axios';\r\nimport { serverIp, serverPort } from '../config';\r\n\r\n\r\n\r\n\r\n\r\nvar exp = 0;\r\nvar owe = [];\r\nvar owed = [];\r\nfunction calculate(props){\r\n   exp = 0;\r\n   owe = [];\r\n   owed = [];\r\n  //  if(props.user.expensis){\r\n  //    console.log(\"****************************m kitni barri hu *********************************\");\r\n//    props.user.expensis.forEach(element => {\r\n// if(element.data){\r\n//   exp += parseInt(element.data.ammount);\r\n//   //someone has to give you \r\n//       if(element.data.ammount>0){\r\n        \r\n//         console.log(\"element.data.ammount>0\")\r\n//         owed.push(element);\r\n//         console.log(owed);\r\n//       }//u need to give\r\n//       else if(element.data.ammount<0){\r\n//         console.log(\"element.data.ammount<0\");\r\n//         // element.data.ammount = -(element.data.ammount);\r\n//         owe.push(element);\r\n//         // owe[owe.length].data.ammount = -( owe[owe.length].data.ammount );\r\n//         console.log(owe);\r\n//       }\r\n//     }\r\n//    });\r\nlet values = [];\r\nregisteredStudents.map((values) => {\r\n  if(values.sum){\r\n    exp += parseInt(values.sum);\r\n    //   //someone has to give you \r\n           if(values.ammount>0){\r\n            \r\n             console.log(\"element.data.ammount>0\")\r\n            owed.push(element);\r\n            console.log(owed);\r\n          }//u need to give\r\n           else if(values<0){\r\n           console.log(\"element.data.ammount<0\");\r\n            values.amount = -(values.amount);\r\n             owe.push(element);\r\n    //         // owe[owe.length].data.ammount = -( owe[owe.length].data.ammount );\r\n             console.log(owe);\r\n          }\r\n        }\r\n\r\n});\r\n\r\n\r\n  }\r\n  // return exp;\r\n\r\n\r\n const Middle = props => {\r\n\r\n  axios.post(`${serverIp}:${serverPort}/gettransactionsdatatotal`)\r\n  \r\n     .then((response) => {\r\n       console.log('Response data in componentDidMount');\r\n       console.log(response.data);\r\n       \r\n       this.setState({\r\n         registeredStudents: response.data,\r\n       });\r\n     }).catch((err) => {\r\n       console.log(`Error in componentDidMount of fetchdata: ${err}`);\r\n       window.alert('Error in connecting to server');\r\n     });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"Middle\">\r\n      {calculate(props)}\r\n      \r\n      <div className=\"MidDash\">\r\n        <div className=\"DashHeader\">\r\n          <h3>Dashboard</h3>\r\n          <button className=\"btn float-right settle\" onClick={props.settle}>\r\n            Settle up\r\n          </button>\r\n          <button className=\"btn float-right expense\" onClick={props.friend}>\r\n            Add an expense\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"total\">\r\n          <div className=\"fitting\">\r\n            <label htmlFor=\"\">total balance</label>\r\n            <p className=\"green\">$ {exp}</p>\r\n          </div>\r\n          <div className=\"fitting\">\r\n            <label htmlFor=\"\">you owe</label>\r\n            <p style = {{color:\"red\"}}>$ {(exp<0)?exp:0}</p>\r\n          </div>\r\n          <div className=\"fitting\">\r\n            <label htmlFor=\"\">you are owed</label>\r\n            <p className=\"green\">$ {(exp>0)?exp:0}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"totalCollection\">\r\n        <div>\r\n          <label htmlFor=\"\">YOU OWE</label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"\" className=\"float-right mr-4\">\r\n            YOU ARE OWED\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className = \"flex\">\r\n        <div className=\"float-left ml-3 borders\">\r\n          <ul>\r\n            {(owe.length == 0)?<li>You do not owe anything</li>:owe.map(value=>\r\n             <li>\r\n             {/* <img\r\n               className=\"imgs\"\r\n               src={require(\"../../images/person-profile.png\")}\r\n               alt=\"\" align=\"left\"\r\n             /> */}\r\n             <div className=\"inline\">\r\n               <h5>{value.email}</h5>\r\n               <span>you owe ${-(value.data.sum)}</span>\r\n             </div>\r\n           </li>\r\n            )}\r\n            {/* <li>\r\n              <img\r\n                className=\"imgs\"\r\n                src={require(\"../../images/person-profile.png\")}\r\n                alt=\"\" align=\"left\"\r\n              />\r\n              <div className=\"inline\">\r\n                <h5>Ram</h5>\r\n                <span>you owe $500</span>\r\n              </div>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n\r\n\r\n\r\n        <div>\r\n          <ul>\r\n          {(owed.length == 0)?<li>You do not owe anything</li>:owed.map(value=>\r\n            <li>\r\n            <img\r\n              className=\"imgs\"\r\n              src={require(\"../../images/person-profile.png\")}\r\n              alt=\"\"\r\n              align=\"left\"\r\n            />\r\n            <div className=\"inline\">\r\n              <h5>{value.name}</h5>\r\n              <span>owes you ${value.data.sum}</span>\r\n            </div>\r\n          </li>\r\n            )}\r\n\r\n            {/* <li>\r\n              <img\r\n                className=\"imgs\"\r\n                src={require(\"../../images/person-profile.png\")}\r\n                alt=\"\"\r\n                align=\"left\"\r\n              />\r\n              <div className=\"inline\">\r\n                <h5>Ram</h5>\r\n                <span>you owe $500</span>\r\n              </div>\r\n            </li> */}\r\n           \r\n            \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"state is  \", state);\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst fn = connect(mapStateToProps);\r\nexport default fn(Middle);\r\n"]},"metadata":{},"sourceType":"module"}