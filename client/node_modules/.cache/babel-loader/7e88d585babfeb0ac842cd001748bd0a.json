{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/Invitation.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { serverIp, serverPort } from '../config';\nimport { Card } from 'react-bootstrap';\n\nclass Invitation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registeredStudents: []\n    };\n    this.returnRegisteredStudents = this.returnRegisteredStudents.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"inside invitation componenet\");\n    axios.post(`${serverIp}:${serverPort}/fetchinvitation`, {\n      email: localStorage.getItem('email_current')\n    }).then(response => {\n      console.log('Response data in componentDidMount');\n      console.log(response.data); //get invite email no \n\n      this.setState({\n        registeredStudents: response.data\n      });\n    }).catch(err => {\n      console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n      window.alert('Error in connecting to server');\n    });\n  }\n\n  handleSearchReset(e) {\n    const data = {\n      email: localStorage.getItem('email_current'),\n      groupname: this.state.registeredStudents.groupname\n    };\n    axios.post(`${serverIp}:${serverPort}/updateusergroup`, data).then(response => {\n      console.log('upadtedtheusergroup');\n      console.log(response.data); //get invite email no \n    }).catch(err => {\n      console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n      window.alert('Error in connecting to server');\n    });\n  }\n\n  returnRegisteredStudents() {\n    return this.state.registeredStudents.map(eachStudent => {\n      // let imgSrc = `${serverIp}:${serverPort}/default.png`;\n      // if (eachStudent.profile_picture_url !== '') {\n      //   imgSrc = `${serverIp}:${serverPort}/${eachStudent.profile_picture_url}`;\n      // }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fitting\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      }, eachStudent.groupname), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleSearchReset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      }, \" Yes \"), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }\n      }, \" No \")));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"friendlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }\n    }), this.returnRegisteredStudents())));\n  } //   function splitPayments(payments) {\n  //     const people = Object.keys(payments);//\n  //     console.log(people)\n  //     const valuesPaid = Object.values(payments);\n  //   console.log(valuesPaid)\n  //     const sum = valuesPaid.reduce((acc, curr) => curr + acc);\n  //     const mean = sum / people.length;\n  //   console.log(mean)\n  //     const sortedPeople = people.sort((personA, personB) => payments[personA] - payments[personB]);\n  //     console.log(sortedPeople);\n  //     const sortedValuesPaid = sortedPeople.map((person) => payments[person] - mean);\n  //   console.log(sortedValuesPaid)\n  //     let i = 0;\n  //     let j = sortedPeople.length - 1;\n  //     let debt;\n  //     while (i < j) {\n  //       debt = Math.min(-(sortedValuesPaid[i]), sortedValuesPaid[j]);\n  //       console.log(debt);\n  //       sortedValuesPaid[i] += debt;\n  //       sortedValuesPaid[j] -= debt;\n  //       console.log(`${sortedPeople[i]} owes ${sortedPeople[j]} $${debt}`);\n  //       if (sortedValuesPaid[i] === 0) {\n  //         i++;\n  //       }\n  //       if (sortedValuesPaid[j] === 0) {\n  //         j--;\n  //       }\n  //     }\n  //   }\n  //   splitPayments(payments);\n  // }\n\n\n}\n\nexport default Invitation; // function calculate(props){\n//     exp = 0;\n//     owe = [];\n//     owed = [];\n//     if(props.user.expensis){\n//       console.log(\"****************************m kitni barri hu *********************************\");\n//     props.user.expensis.forEach(element => {\n//  if(element.data){\n//    exp += parseInt(element.data.ammount);\n//    //someone has to give you \n//        if(element.data.ammount>0){\n//          console.log(\"element.data.ammount>0\")\n//          owed.push(element);\n//          console.log(owed);\n//        }//u need to give\n//        else if(element.data.ammount<0){\n//          console.log(\"element.data.ammount<0\");\n//          // element.data.ammount = -(element.data.ammount);\n//          owe.push(element);\n//          // owe[owe.length].data.ammount = -( owe[owe.length].data.ammount );\n//          console.log(owe);\n//        }\n//      }\n//     });\n//    }\n//    // return exp;\n//  }\n//   const Middle = props => {\n//    return (\n//      <div className=\"Middle\">\n//        {calculate(props)}\n//        <div className=\"MidDash\">\n//          <div className=\"DashHeader\">\n//            <h3>Dashboard</h3>\n//            <button className=\"btn float-right settle\" onClick={props.settle}>\n//              Settle up\n//            </button>\n//            <button className=\"btn float-right expense\" onClick={props.friend}>\n//              Add an expense\n//            </button>\n//          </div>\n//          <div className=\"total\">\n//            <div className=\"fitting\">\n//              <label htmlFor=\"\">total balance</label>\n//              <p className=\"green\">$ {exp}</p>\n//            </div>\n//            <div className=\"fitting\">\n//              <label htmlFor=\"\">you owe</label>\n//              <p style = {{color:\"red\"}}>$ {(exp<0)?exp:0}</p>\n//            </div>\n//            <div className=\"fitting\">\n//              <label htmlFor=\"\">you are owed</label>\n//              <p className=\"green\">$ {(exp>0)?exp:0}</p>\n//            </div>\n//          </div>\n//        </div>\n//        <div className=\"totalCollection\">\n//          <div>\n//            <label htmlFor=\"\">YOU OWE</label>\n//          </div>\n//          <div>\n//            <label htmlFor=\"\" className=\"float-right mr-4\">\n//              YOU ARE OWED\n//            </label>\n//          </div>\n//        </div>\n//        <div className = \"flex\">\n//          <div className=\"float-left ml-3 borders\">\n//            <ul>\n//              {(owe.length == 0)?<li>You do not owe anything</li>:owe.map(value=>\n//               <li>\n//               <img\n//                 className=\"imgs\"\n//                 src={require(\"../../images/person-profile.png\")}\n//                 alt=\"\" align=\"left\"\n//               />\n//               <div className=\"inline\">\n//                 <h5>{value.name}</h5>\n//                 <span>you owe ${-(value.data.ammount)}</span>\n//               </div>\n//             </li>\n//              )}\n//              {/* <li>\n//                <img\n//                  className=\"imgs\"\n//                  src={require(\"../../images/person-profile.png\")}\n//                  alt=\"\" align=\"left\"\n//                />\n//                <div className=\"inline\">\n//                  <h5>Ram</h5>\n//                  <span>you owe $500</span>\n//                </div>\n//              </li> */}\n//            </ul>\n//          </div>\n//          <div>\n//            <ul>\n//            {(owed.length == 0)?<li>You do not owe anything</li>:owed.map(value=>\n//              <li>\n//              <img\n//                className=\"imgs\"\n//                src={require(\"../../images/person-profile.png\")}\n//                alt=\"\"\n//                align=\"left\"\n//              />\n//              <div className=\"inline\">\n//                <h5>{value.name}</h5>\n//                <span>owes you ${value.data.ammount}</span>\n//              </div>\n//            </li>\n//              )}\n//              {/* <li>\n//                <img\n//                  className=\"imgs\"\n//                  src={require(\"../../images/person-profile.png\")}\n//                  alt=\"\"\n//                  align=\"left\"\n//                />\n//                <div className=\"inline\">\n//                  <h5>Ram</h5>\n//                  <span>you owe $500</span>\n//                </div>\n//              </li> */}\n//            </ul>\n//          </div>\n//        </div>\n//      </div>\n//    );\n//  };","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/Invitation.js"],"names":["React","axios","serverIp","serverPort","Card","Invitation","Component","constructor","props","state","registeredStudents","returnRegisteredStudents","bind","componentDidMount","console","log","post","email","localStorage","getItem","then","response","data","setState","catch","err","window","alert","handleSearchReset","e","groupname","map","eachStudent","render"],"mappings":"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":["import React from 'react';\nimport axios from 'axios';\nimport { serverIp, serverPort } from '../config';\nimport {\n    Card\n  } from 'react-bootstrap';\n\n\n  class Invitation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     registeredStudents: [],\n    };\n    this.returnRegisteredStudents = this.returnRegisteredStudents.bind(this);\n    \n  }\n\n  componentDidMount() {\n      console.log(\"inside invitation componenet\")\n    axios.post(`${serverIp}:${serverPort}/fetchinvitation`, { email: localStorage.getItem('email_current') })\n      .then((response) => {\n        console.log('Response data in componentDidMount');\n        console.log(response.data);\n        //get invite email no \n        this.setState({\n          registeredStudents: response.data,\n        });\n      }).catch((err) => {\n        console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n        window.alert('Error in connecting to server');\n     });\n\n  }\n\nhandleSearchReset(e)\n{\n  const data =\n  {\n      email : localStorage.getItem('email_current'),\n      groupname : this.state.registeredStudents.groupname\n\n  }\n\n\n    axios.post(`${serverIp}:${serverPort}/updateusergroup`,data )\n      .then((response) => {\n        console.log('upadtedtheusergroup');\n        console.log(response.data);\n        //get invite email no \n        \n      }).catch((err) => {\n        console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n        window.alert('Error in connecting to server');\n     });\n\n}\n\n\n\n\n\n\n\n  \n  \n  returnRegisteredStudents() {\n    return this.state.registeredStudents.map((eachStudent) => {\n      // let imgSrc = `${serverIp}:${serverPort}/default.png`;\n      // if (eachStudent.profile_picture_url !== '') {\n      //   imgSrc = `${serverIp}:${serverPort}/${eachStudent.profile_picture_url}`;\n      // }\n      return (\n        <div>\n           \n            {/* <span>{eachStudent.email} </span>\n            <div>\n            <span>{eachStudent.sum}</span>\n            </div> */}\n\n          <div className=\"fitting\">\n             <label htmlFor=\"\">{eachStudent.groupname}</label>\n             <button onClick={this.handleSearchReset}> Yes </button>\n             <button> No </button>\n\n             {/* <p style = {{color:\"red\"}}>$ {({eachStudent.sum}>=0)? '\"gets back\"' {eachStudent.sum} :\"gives back\" {eachStudent.sum} }</p> */}\n           </div>\n           \n              \n        </div>\n      );\n\n    });\n       \n          \n  }\n  \n  \nrender()\n{\nreturn(\n<div>\n<ul>\n             <li className=\"friendlist\">\n               <i class=\"fas fa-user\"/>\n               \n               {this.returnRegisteredStudents()}\n               \n               </li>\n\n\n</ul>\n\n\n</div>\n);\n}\n\n\n  \n//   function splitPayments(payments) {\n//     const people = Object.keys(payments);//\n//     console.log(people)\n//     const valuesPaid = Object.values(payments);\n//   console.log(valuesPaid)\n//     const sum = valuesPaid.reduce((acc, curr) => curr + acc);\n//     const mean = sum / people.length;\n//   console.log(mean)\n//     const sortedPeople = people.sort((personA, personB) => payments[personA] - payments[personB]);\n//     console.log(sortedPeople);\n//     const sortedValuesPaid = sortedPeople.map((person) => payments[person] - mean);\n//   console.log(sortedValuesPaid)\n//     let i = 0;\n//     let j = sortedPeople.length - 1;\n//     let debt;\n  \n//     while (i < j) {\n//       debt = Math.min(-(sortedValuesPaid[i]), sortedValuesPaid[j]);\n//       console.log(debt);\n//       sortedValuesPaid[i] += debt;\n//       sortedValuesPaid[j] -= debt;\n  \n//       console.log(`${sortedPeople[i]} owes ${sortedPeople[j]} $${debt}`);\n  \n//       if (sortedValuesPaid[i] === 0) {\n//         i++;\n//       }\n  \n//       if (sortedValuesPaid[j] === 0) {\n//         j--;\n//       }\n//     }\n//   }\n  \n//   splitPayments(payments);\n  \n// }\n\n}\nexport default Invitation;\n\n\n\n\n\n\n\n\n\n\n\n\n// function calculate(props){\n//     exp = 0;\n//     owe = [];\n//     owed = [];\n//     if(props.user.expensis){\n//       console.log(\"****************************m kitni barri hu *********************************\");\n//     props.user.expensis.forEach(element => {\n//  if(element.data){\n//    exp += parseInt(element.data.ammount);\n//    //someone has to give you \n//        if(element.data.ammount>0){\n         \n//          console.log(\"element.data.ammount>0\")\n//          owed.push(element);\n//          console.log(owed);\n//        }//u need to give\n//        else if(element.data.ammount<0){\n//          console.log(\"element.data.ammount<0\");\n//          // element.data.ammount = -(element.data.ammount);\n//          owe.push(element);\n//          // owe[owe.length].data.ammount = -( owe[owe.length].data.ammount );\n//          console.log(owe);\n//        }\n//      }\n//     });\n//    }\n//    // return exp;\n//  }\n \n//   const Middle = props => {\n//    return (\n//      <div className=\"Middle\">\n//        {calculate(props)}\n       \n//        <div className=\"MidDash\">\n//          <div className=\"DashHeader\">\n//            <h3>Dashboard</h3>\n//            <button className=\"btn float-right settle\" onClick={props.settle}>\n//              Settle up\n//            </button>\n//            <button className=\"btn float-right expense\" onClick={props.friend}>\n//              Add an expense\n//            </button>\n//          </div>\n \n//          <div className=\"total\">\n//            <div className=\"fitting\">\n//              <label htmlFor=\"\">total balance</label>\n//              <p className=\"green\">$ {exp}</p>\n//            </div>\n//            <div className=\"fitting\">\n//              <label htmlFor=\"\">you owe</label>\n//              <p style = {{color:\"red\"}}>$ {(exp<0)?exp:0}</p>\n//            </div>\n//            <div className=\"fitting\">\n//              <label htmlFor=\"\">you are owed</label>\n//              <p className=\"green\">$ {(exp>0)?exp:0}</p>\n//            </div>\n//          </div>\n//        </div>\n \n//        <div className=\"totalCollection\">\n//          <div>\n//            <label htmlFor=\"\">YOU OWE</label>\n//          </div>\n//          <div>\n//            <label htmlFor=\"\" className=\"float-right mr-4\">\n//              YOU ARE OWED\n//            </label>\n//          </div>\n//        </div>\n//        <div className = \"flex\">\n//          <div className=\"float-left ml-3 borders\">\n//            <ul>\n//              {(owe.length == 0)?<li>You do not owe anything</li>:owe.map(value=>\n//               <li>\n//               <img\n//                 className=\"imgs\"\n//                 src={require(\"../../images/person-profile.png\")}\n//                 alt=\"\" align=\"left\"\n//               />\n//               <div className=\"inline\">\n//                 <h5>{value.name}</h5>\n//                 <span>you owe ${-(value.data.ammount)}</span>\n//               </div>\n//             </li>\n//              )}\n//              {/* <li>\n//                <img\n//                  className=\"imgs\"\n//                  src={require(\"../../images/person-profile.png\")}\n//                  alt=\"\" align=\"left\"\n//                />\n//                <div className=\"inline\">\n//                  <h5>Ram</h5>\n//                  <span>you owe $500</span>\n//                </div>\n//              </li> */}\n//            </ul>\n//          </div>\n \n \n \n//          <div>\n//            <ul>\n//            {(owed.length == 0)?<li>You do not owe anything</li>:owed.map(value=>\n//              <li>\n//              <img\n//                className=\"imgs\"\n//                src={require(\"../../images/person-profile.png\")}\n//                alt=\"\"\n//                align=\"left\"\n//              />\n//              <div className=\"inline\">\n//                <h5>{value.name}</h5>\n//                <span>owes you ${value.data.ammount}</span>\n//              </div>\n//            </li>\n//              )}\n \n//              {/* <li>\n//                <img\n//                  className=\"imgs\"\n//                  src={require(\"../../images/person-profile.png\")}\n//                  alt=\"\"\n//                  align=\"left\"\n//                />\n//                <div className=\"inline\">\n//                  <h5>Ram</h5>\n//                  <span>you owe $500</span>\n//                </div>\n//              </li> */}\n            \n             \n//            </ul>\n//          </div>\n//        </div>\n//      </div>\n//    );\n//  };\n "]},"metadata":{},"sourceType":"module"}