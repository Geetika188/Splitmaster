{"ast":null,"code":"import React from 'react'; // import {connect} from 'react-redux';\n\nimport DashHeader from '../components/DashHeader';\nimport { AddFriend } from '../components/Dashboard/AddFriends'; //import  Grouptransaction  from '../components/Dashboard/Grouptransaction';\n\nimport { serverIp, serverPort } from '../components/config'; // import {userActionCreator} from \"../redux/actionCreator/userAction\";\n// import { store } from \"../redux/store\"\n\nimport Friend from '../components/Dashboard/popups/Friend'; //invittaion no wale \n\nimport \"../styles/Dashboard.css\";\nimport AddExpense from '../components/Dashboard/popups/addExpense'; //import SettleUp  from '../components/Dashboard/popups/settleUp';\n\nexport class transactionma extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showFriend: true,\n      showExp: true,\n      showGroup: true\n    };\n  }\n\n  alwaysRun(email_current) {\n    console.log(\"this is username ...........\", email_current); //   if(username != undefined){\n    //     instance.post('/getData',{username: username}).then((resp)=>{\n    //                        console.log(\"this is response\",resp.data.user);\n    //                        var action = userActionCreator(resp.data.user,'AddUser');\n    //                        store.dispatch(action);\n    //                    })\n    //   }\n  } //  componentWillReceiveProps(nextprops){\n  //      let oldState = this.props.userInfo;\n  //      console.log(\"old state length \",oldState.friends.length);\n  //      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\n  //     if(oldState.friends.length != nextprops.userInfo.friends.length){\n  //         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //                console.log(\"this is response\",resp.data.user);\n  //                var action = userActionCreator(resp.data.user,'AddUser');\n  //                store.dispatch(action);\n  //            })\n  //         oldState = nextprops.userInfo;\n  //     }\n  //     console.log(\"old state length \",oldState.friends.length);\n  //     // console.log(\"will Mount \",nextprops.userInfo);\n  //     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //     //            console.log(\"this is response\",resp.data.user);\n  //     //            var action = userActionCreator(resp.data.user,'AddUser');\n  //     //            store.dispatch(action);\n  //     //        })\n  //  }   \n  // componentDidMount(){\n  //     console.log(\"will Mount********************************************** \",localStorage.email_current);\n  //    instance.post('/getData',{username: localStorage.username}).then((resp)=>{\n  //        console.log(\"this is response\",resp.data.user);\n  //        var action = userActionCreator(resp.data.user,'AddUser');\n  //        store.dispatch(action);\n  //    })\n  // }\n  // //get data bill of current user \n  // //get invitation no wale data  from grouplist\n  // //show invitaion data\n  // // showFriend(){\n  // //      this.setState({...this.state,showFriend: !this.state.showFriend});\n  // //      console.log(this.state.showFriend);\n  // // }\n  // showExpense(){\n  //     this.setState({...this.state,showExp: !this.state.showExp});\n  //     console.log(this.state.showExp);\n  // }  \n  // // settle(){\n  // //     this.setState({...this.state,settleUp: !this.state.settleUp});\n  // //     console.log(this.state.settleUp);\n  // // }\n  // render(){\n  //     return(\n  //     <div >\n  //         {/* {this.alwaysRun(this.props.userInfo.username)} */}\n  //         <DashHeader/>\n  //         {/* {this.state.showFriend && <Friend friend = {this.showFriend.bind(this)}/>} */}\n  //         {this.state.showExp && <AddExpense friend = {this.showExpense.bind(this)}/>}\n  //         {/* {this.state.settleUp && <SettleUp friend = {this.settle.bind(this)}/>} */}\n  //         <div className =\"flex\">\n  //         <AddFriend  friend = {this.showFriend.bind(this)}/>\n  //         <Middle friend = {this.showExpense.bind(this)} settle = {this.settle.bind(this)}/>\n  //         </div>\n  //     </div>\n  // )\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/containers/transactionma.js"],"names":["React","DashHeader","AddFriend","serverIp","serverPort","Friend","AddExpense","transactionma","Component","constructor","props","state","showFriend","showExp","showGroup","alwaysRun","email_current","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B,C,CACA;;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC,C,CACA;AACA;;AACA,OAAQC,MAAR,MAAqB,uCAArB,C,CAA6D;;AAC7D,OAAO,yBAAP;AACA,OAAOC,UAAP,MAAuB,2CAAvB,C,CACA;;AAEA,OAAO,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA2C;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE,IAAb;AAAkBC,MAAAA,OAAO,EAAC,IAA1B;AAA+BC,MAAAA,SAAS,EAAC;AAAzC,KAAb;AAEH;;AAEDC,EAAAA,SAAS,CAACC,aAAD,EAAe;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CF,aAA3C,EADsB,CAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GAhB6C,CAiBlD;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnFkD","sourcesContent":["import React from 'react';\n// import {connect} from 'react-redux';\nimport DashHeader from '../components/DashHeader';\nimport { AddFriend } from '../components/Dashboard/AddFriends';\n//import  Grouptransaction  from '../components/Dashboard/Grouptransaction';\nimport { serverIp, serverPort } from '../components/config';\n// import {userActionCreator} from \"../redux/actionCreator/userAction\";\n// import { store } from \"../redux/store\"\nimport  Friend  from '../components/Dashboard/popups/Friend';//invittaion no wale \nimport \"../styles/Dashboard.css\"\nimport AddExpense from '../components/Dashboard/popups/addExpense';\n//import SettleUp  from '../components/Dashboard/popups/settleUp';\n\nexport class transactionma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {showFriend: true,showExp:true,showGroup:true}\n\n    }\n\n    alwaysRun(email_current){\n      console.log(\"this is username ...........\",email_current);\n    //   if(username != undefined){\n    //     instance.post('/getData',{username: username}).then((resp)=>{\n    //                        console.log(\"this is response\",resp.data.user);\n    //                        var action = userActionCreator(resp.data.user,'AddUser');\n    //                        store.dispatch(action);\n    //                    })\n    //   }\n    }  \n//  componentWillReceiveProps(nextprops){\n//      let oldState = this.props.userInfo;\n//      console.log(\"old state length \",oldState.friends.length);\n//      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\n\n\n//     if(oldState.friends.length != nextprops.userInfo.friends.length){\n//         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\n//                console.log(\"this is response\",resp.data.user);\n//                var action = userActionCreator(resp.data.user,'AddUser');\n//                store.dispatch(action);\n//            })\n//         oldState = nextprops.userInfo;\n//     }\n//     console.log(\"old state length \",oldState.friends.length);\n\n//     // console.log(\"will Mount \",nextprops.userInfo);\n//     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\n//     //            console.log(\"this is response\",resp.data.user);\n//     //            var action = userActionCreator(resp.data.user,'AddUser');\n//     //            store.dispatch(action);\n//     //        })\n//  }   \n// componentDidMount(){\n//     console.log(\"will Mount********************************************** \",localStorage.email_current);\n//    instance.post('/getData',{username: localStorage.username}).then((resp)=>{\n//        console.log(\"this is response\",resp.data.user);\n//        var action = userActionCreator(resp.data.user,'AddUser');\n//        store.dispatch(action);\n//    })\n// }\n// //get data bill of current user \n// //get invitation no wale data  from grouplist\n// //show invitaion data\n\n\n// // showFriend(){\n// //      this.setState({...this.state,showFriend: !this.state.showFriend});\n// //      console.log(this.state.showFriend);\n// // }\n// showExpense(){\n//     this.setState({...this.state,showExp: !this.state.showExp});\n//     console.log(this.state.showExp);\n// }  \n\n// // settle(){\n// //     this.setState({...this.state,settleUp: !this.state.settleUp});\n// //     console.log(this.state.settleUp);\n// // }\n// render(){\n    \n//     return(\n//     <div >\n//         {/* {this.alwaysRun(this.props.userInfo.username)} */}\n//         <DashHeader/>\n        \n//         {/* {this.state.showFriend && <Friend friend = {this.showFriend.bind(this)}/>} */}\n//         {this.state.showExp && <AddExpense friend = {this.showExpense.bind(this)}/>}\n//         {/* {this.state.settleUp && <SettleUp friend = {this.settle.bind(this)}/>} */}\n        \n//         <div className =\"flex\">\n//         <AddFriend  friend = {this.showFriend.bind(this)}/>\n//         <Middle friend = {this.showExpense.bind(this)} settle = {this.settle.bind(this)}/>\n//         </div>\n//     </div>\n// )\n// }\n}\n\n"]},"metadata":{},"sourceType":"module"}