{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/Result.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { serverIp, serverPort } from '../config';\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {//   registeredStudents: [],\n    }; //   this.returnRegisteredStudents = this.returnRegisteredStudents.bind(this);\n  } //   componentDidMount() {\n  //     axios.post(`${serverIp}:${serverPort}/getStudentsRegisteredInAEvent`, { email: localStorage.getItem('email_current') })\n  //       .then((response) => {\n  //         console.log('Response data in componentDidMount');\n  //         console.log(response.data);\n  //         //get invite email no \n  //         this.setState({\n  //           registeredStudents: response.data,\n  //         });\n  //       }).catch((err) => {\n  //         console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n  //         window.alert('Error in connecting to server');\n  //       });\n  //   }\n\n\n  returnRegisteredStudents() {\n    return this.state.registeredStudents.map(eachStudent => {\n      // let imgSrc = `${serverIp}:${serverPort}/default.png`;\n      // if (eachStudent.profile_picture_url !== '') {\n      //   imgSrc = `${serverIp}:${serverPort}/${eachStudent.profile_picture_url}`;\n      // }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: `/transactionma}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 41\n        }\n      }, eachStudent.groupname, \" \")));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"friendlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    }), this.returnRegisteredStudents())));\n  } //   function splitPayments(payments) {\n  //     const people = Object.keys(payments);//\n  //     console.log(people)\n  //     const valuesPaid = Object.values(payments);\n  //   console.log(valuesPaid)\n  //     const sum = valuesPaid.reduce((acc, curr) => curr + acc);\n  //     const mean = sum / people.length;\n  //   console.log(mean)\n  //     const sortedPeople = people.sort((personA, personB) => payments[personA] - payments[personB]);\n  //     console.log(sortedPeople);\n  //     const sortedValuesPaid = sortedPeople.map((person) => payments[person] - mean);\n  //   console.log(sortedValuesPaid)\n  //     let i = 0;\n  //     let j = sortedPeople.length - 1;\n  //     let debt;\n  //     while (i < j) {\n  //       debt = Math.min(-(sortedValuesPaid[i]), sortedValuesPaid[j]);\n  //       console.log(debt);\n  //       sortedValuesPaid[i] += debt;\n  //       sortedValuesPaid[j] -= debt;\n  //       console.log(`${sortedPeople[i]} owes ${sortedPeople[j]} $${debt}`);\n  //       if (sortedValuesPaid[i] === 0) {\n  //         i++;\n  //       }\n  //       if (sortedValuesPaid[j] === 0) {\n  //         j--;\n  //       }\n  //     }\n  //   }\n  //   splitPayments(payments);\n  // }\n\n\n}\n\nexport default Result;","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/Result.js"],"names":["React","axios","serverIp","serverPort","Result","Component","constructor","props","state","returnRegisteredStudents","registeredStudents","map","eachStudent","groupname","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,WAArC;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,CACd;AADc,KAAb,CAFiB,CAKpB;AAEE,GARkC,CAUrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIEC,EAAAA,wBAAwB,GAAG;AACzB,WAAO,KAAKD,KAAL,CAAWE,kBAAX,CAA8BC,GAA9B,CAAmCC,WAAD,IAAiB;AACxD;AACA;AACA;AACA;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEG;AAAG,QAAA,IAAI,EAAG,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,WAAW,CAACC,SAAnB,MAA7B,CAFH,CADF;AAWD,KAhBM,CAAP;AAmBD;;AAGHC,EAAAA,MAAM,GACN;AACA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACa;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGG,KAAKL,wBAAL,EAHH,CADb,CADA,CADA;AAgBC,GApEoC,CAwErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AA5GqC;;AA+GrC,eAAeL,MAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { serverIp, serverPort } from '../config';\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n   //   registeredStudents: [],\n    };\n //   this.returnRegisteredStudents = this.returnRegisteredStudents.bind(this);\n  \n  }\n\n//   componentDidMount() {\n//     axios.post(`${serverIp}:${serverPort}/getStudentsRegisteredInAEvent`, { email: localStorage.getItem('email_current') })\n//       .then((response) => {\n//         console.log('Response data in componentDidMount');\n//         console.log(response.data);\n//         //get invite email no \n//         this.setState({\n//           registeredStudents: response.data,\n//         });\n//       }).catch((err) => {\n//         console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n//         window.alert('Error in connecting to server');\n//       });\n//   }\n\n  \n  \n  returnRegisteredStudents() {\n    return this.state.registeredStudents.map((eachStudent) => {\n      // let imgSrc = `${serverIp}:${serverPort}/default.png`;\n      // if (eachStudent.profile_picture_url !== '') {\n      //   imgSrc = `${serverIp}:${serverPort}/${eachStudent.profile_picture_url}`;\n      // }\n      return (\n        <div>\n           \n           <a href={`/transactionma}`}> <span>{eachStudent.groupname} </span></a>\n          \n               \n               \n              \n        </div>\n      );\n\n    });\n       \n          \n  }\n  \n  \nrender()\n{\nreturn(\n<div>\n<ul>\n             <li className=\"friendlist\">\n               <i class=\"fas fa-user\"/>\n               \n               {this.returnRegisteredStudents()}\n               \n               </li>\n\n\n</ul>\n\n\n</div>\n);\n}\n\n\n  \n//   function splitPayments(payments) {\n//     const people = Object.keys(payments);//\n//     console.log(people)\n//     const valuesPaid = Object.values(payments);\n//   console.log(valuesPaid)\n//     const sum = valuesPaid.reduce((acc, curr) => curr + acc);\n//     const mean = sum / people.length;\n//   console.log(mean)\n//     const sortedPeople = people.sort((personA, personB) => payments[personA] - payments[personB]);\n//     console.log(sortedPeople);\n//     const sortedValuesPaid = sortedPeople.map((person) => payments[person] - mean);\n//   console.log(sortedValuesPaid)\n//     let i = 0;\n//     let j = sortedPeople.length - 1;\n//     let debt;\n  \n//     while (i < j) {\n//       debt = Math.min(-(sortedValuesPaid[i]), sortedValuesPaid[j]);\n//       console.log(debt);\n//       sortedValuesPaid[i] += debt;\n//       sortedValuesPaid[j] -= debt;\n  \n//       console.log(`${sortedPeople[i]} owes ${sortedPeople[j]} $${debt}`);\n  \n//       if (sortedValuesPaid[i] === 0) {\n//         i++;\n//       }\n  \n//       if (sortedValuesPaid[j] === 0) {\n//         j--;\n//       }\n//     }\n//   }\n  \n//   splitPayments(payments);\n  \n// }\n\n}\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}