{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { Col, Button, Input } from 'reactstrap';\nimport { serverIp, serverPort } from '../../../config';\nimport CustomNavBar from '../../NavBar/CustomNavBar';\nimport '../../../../node_modules/react-dropdown/style.css';\nimport EventCard from './EventCard';\nimport './ListEvents.css';\n\nclass StudentListEvents extends React.Component {//   constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //       searchValue: '',\n  //       filteredEvents: [],\n  //     };\n  //     this.returnEventsCards = this.returnEventsCards.bind(this);\n  //     this.searchValueChangeHandler = this.searchValueChangeHandler.bind(this);\n  //     this.findEventsSearchHandler = this.findEventsSearchHandler.bind(this);\n  //     this.handleReset = this.handleReset.bind(this);\n  //   }\n  //   componentDidMount() {\n  //     axios.post(`${serverIp}:${serverPort}/getAllEvents`, {})\n  //       .then((response) => {\n  //         console.log('ComponentDidMount response in ListEvents.js of Student');\n  //         console.log(response.data);\n  //         return response;\n  //       }).then((response) => {\n  //         axios.post(`${serverIp}:${serverPort}/getStudentAllEducation`, { studentId: localStorage.getItem('student_id') })\n  //           .then((resp) => {\n  //             console.log('getStudentAllEducation');\n  //             console.log(resp.data);\n  //             // storing education to enable/disable apply button in Event Card based on eligibility\n  //             sessionStorage.setItem('educationSetFromListEvents', JSON.stringify(resp.data));\n  //             this.setState({\n  //               filteredEvents: response.data,\n  //             });\n  //           }).catch((err) => {\n  //             console.log(`Error in getStudentAllEducation post call in ListEvents componentDidMount axios post call: ${err}`);\n  //             window.alert('Error in connecting to server');\n  //           });\n  //       }).catch((err) => {\n  //         console.log(`Error in ListEvents componentDidMount axios getAllEvents post call: ${err}`);\n  //         window.alert('Error in connecting to server');\n  //       });\n  //   }\n  //   returnEventsCards() {\n  //     return this.state.filteredEvents.map((eachEvent) => <EventCard event={eachEvent} key={eachEvent.event_id} showRegisterButton />);\n  //   }\n  //   searchValueChangeHandler(e) {\n  //     this.setState({\n  //       searchValue: e.target.value,\n  //     });\n  //   }\n  //   handleReset(e) {\n  //     e.preventDefault();\n  //     axios.post(`${serverIp}:${serverPort}/getAllEvents`, {})\n  //       .then((response) => {\n  //         console.log('handleReset response in ListEvents.js of Student');\n  //         this.setState({\n  //           filteredEvents: response.data,\n  //           searchValue: '',\n  //         });\n  //       }).catch((err) => {\n  //         console.log(`Error in ListEvents handleReset axios getAllEvents post call: ${err}`);\n  //         window.alert('Error in connecting to server');\n  //       });\n  //   }\n  //   findEventsSearchHandler(e) {\n  //     e.preventDefault();\n  //     const data = {\n  //       eventName: this.state.searchValue,\n  //     };\n  //     axios.post(`${serverIp}:${serverPort}/getSearchedEvent`, data)\n  //       .then((response) => {\n  //         console.log('Response from getSearchedEvent');\n  //         console.log(response.data);\n  //         this.setState({\n  //           filteredEvents: response.data,\n  //         });\n  //       }).catch((err) => {\n  //         console.log(`Error in axios post of getSearchedEvent on clicking of Search button: ${err}`);\n  //         window.alert('Error in connecting to the server');\n  //       });\n  //   }\n  //   render() {\n  //     if (!localStorage.getItem('userRole')) {\n  //       window.location.href = '/';\n  //     }\n  //     return (\n  //       <div>\n  //         <div>\n  //           <CustomNavBar />\n  //         </div>\n  //         <div>\n  //           <div className=\"main-div-studentProfile\">\n  //             <div className=\"main-relative-div-studentProfile\">\n  //               <div className=\"row\">\n  //                 <div className=\"col-md-4\">\n  //                   <div className=\"experienceHeading\">\n  //                     <h2>Search Events</h2>\n  //                   </div>\n  //                   <form onSubmit={this.findEventsSearchHandler}>\n  //                     <Input type=\"text\" name=\"searchEvent\" id=\"searchEvent\" placeholder=\"Search Event\" value={this.state.searchValue} onChange={this.searchValueChangeHandler} required />\n  //                     {' '}\n  //                     <br />\n  //                     <Col sm={{ offset: 2 }}>\n  //                       <Button color=\"primary\" style={{ width: 100, height: 40 }}>Search</Button>\n  //                       {' '}\n  //                       <Button color=\"info\" style={{ width: 100, height: 40 }} onClick={this.handleReset}>Reset</Button>\n  //                     </Col>\n  //                   </form>\n  //                 </div>\n  //                 <div className=\"col-md-8\">\n  //                   <div className=\"educationCard\">\n  //                     <div className=\"experienceHeading\">\n  //                       {this.returnEventsCards()}\n  //                     </div>\n  //                   </div>\n  //                 </div>\n  //               </div>\n  //             </div>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n}\n\nexport default StudentListEvents;","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/filter.js"],"names":["React","axios","Col","Button","Input","serverIp","serverPort","CustomNavBar","EventCard","StudentListEvents","Component"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EACOC,MADP,EACeC,KADf,QAEO,YAFP;AAGA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,iBAArC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,mDAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,kBAAP;;AAEA,MAAMC,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAAgD,CAChhIgD;;AAmIhD,eAAeD,iBAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n  Col, Button, Input,\n} from 'reactstrap';\nimport { serverIp, serverPort } from '../../../config';\nimport CustomNavBar from '../../NavBar/CustomNavBar';\nimport '../../../../node_modules/react-dropdown/style.css';\nimport EventCard from './EventCard';\nimport './ListEvents.css';\n\nclass StudentListEvents extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       searchValue: '',\n//       filteredEvents: [],\n\n//     };\n//     this.returnEventsCards = this.returnEventsCards.bind(this);\n//     this.searchValueChangeHandler = this.searchValueChangeHandler.bind(this);\n//     this.findEventsSearchHandler = this.findEventsSearchHandler.bind(this);\n//     this.handleReset = this.handleReset.bind(this);\n//   }\n\n//   componentDidMount() {\n//     axios.post(`${serverIp}:${serverPort}/getAllEvents`, {})\n//       .then((response) => {\n//         console.log('ComponentDidMount response in ListEvents.js of Student');\n//         console.log(response.data);\n//         return response;\n//       }).then((response) => {\n//         axios.post(`${serverIp}:${serverPort}/getStudentAllEducation`, { studentId: localStorage.getItem('student_id') })\n//           .then((resp) => {\n//             console.log('getStudentAllEducation');\n//             console.log(resp.data);\n//             // storing education to enable/disable apply button in Event Card based on eligibility\n//             sessionStorage.setItem('educationSetFromListEvents', JSON.stringify(resp.data));\n//             this.setState({\n\n//               filteredEvents: response.data,\n\n//             });\n//           }).catch((err) => {\n//             console.log(`Error in getStudentAllEducation post call in ListEvents componentDidMount axios post call: ${err}`);\n//             window.alert('Error in connecting to server');\n//           });\n//       }).catch((err) => {\n//         console.log(`Error in ListEvents componentDidMount axios getAllEvents post call: ${err}`);\n//         window.alert('Error in connecting to server');\n//       });\n//   }\n\n//   returnEventsCards() {\n//     return this.state.filteredEvents.map((eachEvent) => <EventCard event={eachEvent} key={eachEvent.event_id} showRegisterButton />);\n//   }\n\n//   searchValueChangeHandler(e) {\n//     this.setState({\n//       searchValue: e.target.value,\n//     });\n//   }\n\n//   handleReset(e) {\n//     e.preventDefault();\n//     axios.post(`${serverIp}:${serverPort}/getAllEvents`, {})\n//       .then((response) => {\n//         console.log('handleReset response in ListEvents.js of Student');\n//         this.setState({\n//           filteredEvents: response.data,\n\n//           searchValue: '',\n//         });\n//       }).catch((err) => {\n//         console.log(`Error in ListEvents handleReset axios getAllEvents post call: ${err}`);\n//         window.alert('Error in connecting to server');\n//       });\n//   }\n\n//   findEventsSearchHandler(e) {\n//     e.preventDefault();\n//     const data = {\n//       eventName: this.state.searchValue,\n//     };\n//     axios.post(`${serverIp}:${serverPort}/getSearchedEvent`, data)\n//       .then((response) => {\n//         console.log('Response from getSearchedEvent');\n//         console.log(response.data);\n//         this.setState({\n//           filteredEvents: response.data,\n\n//         });\n//       }).catch((err) => {\n//         console.log(`Error in axios post of getSearchedEvent on clicking of Search button: ${err}`);\n//         window.alert('Error in connecting to the server');\n//       });\n//   }\n\n//   render() {\n//     if (!localStorage.getItem('userRole')) {\n//       window.location.href = '/';\n//     }\n//     return (\n//       <div>\n//         <div>\n//           <CustomNavBar />\n//         </div>\n//         <div>\n//           <div className=\"main-div-studentProfile\">\n//             <div className=\"main-relative-div-studentProfile\">\n//               <div className=\"row\">\n//                 <div className=\"col-md-4\">\n//                   <div className=\"experienceHeading\">\n//                     <h2>Search Events</h2>\n//                   </div>\n//                   <form onSubmit={this.findEventsSearchHandler}>\n//                     <Input type=\"text\" name=\"searchEvent\" id=\"searchEvent\" placeholder=\"Search Event\" value={this.state.searchValue} onChange={this.searchValueChangeHandler} required />\n//                     {' '}\n//                     <br />\n//                     <Col sm={{ offset: 2 }}>\n//                       <Button color=\"primary\" style={{ width: 100, height: 40 }}>Search</Button>\n//                       {' '}\n//                       <Button color=\"info\" style={{ width: 100, height: 40 }} onClick={this.handleReset}>Reset</Button>\n//                     </Col>\n//                   </form>\n//                 </div>\n//                 <div className=\"col-md-8\">\n//                   <div className=\"educationCard\">\n//                     <div className=\"experienceHeading\">\n//                       {this.returnEventsCards()}\n//                     </div>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n}\n\nexport default StudentListEvents;\n"]},"metadata":{},"sourceType":"module"}