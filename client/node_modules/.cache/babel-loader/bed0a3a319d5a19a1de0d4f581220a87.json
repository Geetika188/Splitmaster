{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/containers/transactionma.js\";\nimport React from 'react'; // import {connect} from 'react-redux';\n\nimport DashHeader from '../components/DashHeader';\nimport { AddFriend } from '../components/Dashboard/AddFriends';\nimport Grouptransaction from '../components/Dashboard/Grouptransaction';\nimport { serverIp, serverPort } from '../components/config'; // import {userActionCreator} from \"../redux/actionCreator/userAction\";\n// import { store } from \"../redux/store\"\n\nimport Friend from '../components/Dashboard/popups/Friend'; //invittaion no wale \n\nimport \"../styles/Dashboard.css\";\nimport AddExpense from '../components/Dashboard/popups/addExpense'; //import SettleUp  from '../components/Dashboard/popups/settleUp';\n\nexport class transactionma extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showFriend: true,\n      showExp: true,\n      showGroup: true\n    };\n  }\n\n  alwaysRun(email_current) {\n    console.log(\"this is username ...........\", email_current); //   if(username != undefined){\n    //     instance.post('/getData',{username: username}).then((resp)=>{\n    //                        console.log(\"this is response\",resp.data.user);\n    //                        var action = userActionCreator(resp.data.user,'AddUser');\n    //                        store.dispatch(action);\n    //                    })\n    //   }\n  } //  componentWillReceiveProps(nextprops){\n  //      let oldState = this.props.userInfo;\n  //      console.log(\"old state length \",oldState.friends.length);\n  //      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\n  //     if(oldState.friends.length != nextprops.userInfo.friends.length){\n  //         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //                console.log(\"this is response\",resp.data.user);\n  //                var action = userActionCreator(resp.data.user,'AddUser');\n  //                store.dispatch(action);\n  //            })\n  //         oldState = nextprops.userInfo;\n  //     }\n  //     console.log(\"old state length \",oldState.friends.length);\n  //     // console.log(\"will Mount \",nextprops.userInfo);\n  //     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //     //            console.log(\"this is response\",resp.data.user);\n  //     //            var action = userActionCreator(resp.data.user,'AddUser');\n  //     //            store.dispatch(action);\n  //     //        })\n  //  }   \n\n\n  componentDidMount() {\n    console.log(\"will Mount********************************************** \", localStorage.email_current);\n    instance.post('/getData', {\n      username: localStorage.username\n    }).then(resp => {\n      console.log(\"this is response\", resp.data.user);\n      var action = userActionCreator(resp.data.user, 'AddUser');\n      store.dispatch(action);\n    });\n  } //get data bill of current user \n  //get invitation no wale data  from grouplist\n  //show invitaion data\n  // showFriend(){\n  //      this.setState({...this.state,showFriend: !this.state.showFriend});\n  //      console.log(this.state.showFriend);\n  // }\n\n\n  showExpense() {\n    this.setState({ ...this.state,\n      showExp: !this.state.showExp\n    });\n    console.log(this.state.showExp);\n  } // settle(){\n  //     this.setState({...this.state,settleUp: !this.state.settleUp});\n  //     console.log(this.state.settleUp);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DashHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), this.state.showExp && /*#__PURE__*/React.createElement(AddExpense, {\n      friend: this.showExpense.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddFriend, {\n      friend: this.showFriend.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Middle, {\n      friend: this.showExpense.bind(this),\n      settle: this.settle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/containers/transactionma.js"],"names":["React","DashHeader","AddFriend","Grouptransaction","serverIp","serverPort","Friend","AddExpense","transactionma","Component","constructor","props","state","showFriend","showExp","showGroup","alwaysRun","email_current","console","log","componentDidMount","localStorage","instance","post","username","then","resp","data","user","action","userActionCreator","store","dispatch","showExpense","setState","render","bind","settle"],"mappings":"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","sourcesContent":["import React from 'react';\n// import {connect} from 'react-redux';\nimport DashHeader from '../components/DashHeader';\nimport { AddFriend } from '../components/Dashboard/AddFriends';\nimport  Grouptransaction  from '../components/Dashboard/Grouptransaction';\nimport { serverIp, serverPort } from '../components/config';\n// import {userActionCreator} from \"../redux/actionCreator/userAction\";\n// import { store } from \"../redux/store\"\nimport  Friend  from '../components/Dashboard/popups/Friend';//invittaion no wale \nimport \"../styles/Dashboard.css\"\nimport AddExpense from '../components/Dashboard/popups/addExpense';\n//import SettleUp  from '../components/Dashboard/popups/settleUp';\n\nexport class transactionma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {showFriend: true,showExp:true,showGroup:true}\n\n    }\n\n    alwaysRun(email_current){\n      console.log(\"this is username ...........\",email_current);\n    //   if(username != undefined){\n    //     instance.post('/getData',{username: username}).then((resp)=>{\n    //                        console.log(\"this is response\",resp.data.user);\n    //                        var action = userActionCreator(resp.data.user,'AddUser');\n    //                        store.dispatch(action);\n    //                    })\n    //   }\n    }  \n//  componentWillReceiveProps(nextprops){\n//      let oldState = this.props.userInfo;\n//      console.log(\"old state length \",oldState.friends.length);\n//      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\n\n\n//     if(oldState.friends.length != nextprops.userInfo.friends.length){\n//         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\n//                console.log(\"this is response\",resp.data.user);\n//                var action = userActionCreator(resp.data.user,'AddUser');\n//                store.dispatch(action);\n//            })\n//         oldState = nextprops.userInfo;\n//     }\n//     console.log(\"old state length \",oldState.friends.length);\n\n//     // console.log(\"will Mount \",nextprops.userInfo);\n//     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\n//     //            console.log(\"this is response\",resp.data.user);\n//     //            var action = userActionCreator(resp.data.user,'AddUser');\n//     //            store.dispatch(action);\n//     //        })\n//  }   \ncomponentDidMount(){\n    console.log(\"will Mount********************************************** \",localStorage.email_current);\n   instance.post('/getData',{username: localStorage.username}).then((resp)=>{\n       console.log(\"this is response\",resp.data.user);\n       var action = userActionCreator(resp.data.user,'AddUser');\n       store.dispatch(action);\n   })\n}\n//get data bill of current user \n//get invitation no wale data  from grouplist\n//show invitaion data\n\n\n// showFriend(){\n//      this.setState({...this.state,showFriend: !this.state.showFriend});\n//      console.log(this.state.showFriend);\n// }\nshowExpense(){\n    this.setState({...this.state,showExp: !this.state.showExp});\n    console.log(this.state.showExp);\n}  \n\n// settle(){\n//     this.setState({...this.state,settleUp: !this.state.settleUp});\n//     console.log(this.state.settleUp);\n// }\nrender(){\n    \n    return(\n    <div >\n        {/* {this.alwaysRun(this.props.userInfo.username)} */}\n        <DashHeader/>\n        \n        {/* {this.state.showFriend && <Friend friend = {this.showFriend.bind(this)}/>} */}\n        {this.state.showExp && <AddExpense friend = {this.showExpense.bind(this)}/>}\n        {/* {this.state.settleUp && <SettleUp friend = {this.settle.bind(this)}/>} */}\n        \n        <div className =\"flex\">\n        <AddFriend  friend = {this.showFriend.bind(this)}/>\n        <Middle friend = {this.showExpense.bind(this)} settle = {this.settle.bind(this)}/>\n        </div>\n    </div>\n)\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}