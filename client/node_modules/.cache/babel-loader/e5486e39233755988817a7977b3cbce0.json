{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/popups/addExpense.js\";\nimport React from \"react\";\nimport \"../../../styles/frndPop.css\";\nimport { connect } from \"react-redux\";\nimport Chips, { Chip } from \"react-chips\";\nimport { instance } from \"../../../utils/AxiosConfig\";\nimport { store } from \"../../../redux/store\";\nimport { userActionCreator } from \"../../../redux/actionCreator/userAction\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport Groups from \"../../Groups\"; //import { serverIp, serverPort } from '../components/config';\n\nclass AddExpense extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = chips => {\n      console.log(chips);\n      this.setState({ ...this.state,\n        chips\n      });\n    };\n\n    this.input = {};\n    this.state = {\n      chips: []\n    };\n\n    registeredStudents: [];\n  }\n\n  getdate() {\n    var today = new Date();\n    return today.getFullYear() + \"-\" + (\"0\" + (today.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + today.getDate()).slice(-2);\n  }\n\n  componentDidMount() {\n    axios.post(`${serverIp}:${serverPort}/getStudentsRegisteredInAEvent`, {\n      groupname: localStorage.getItem('groupname')\n    }).then(response => {\n      console.log('Response data in componentDidMount');\n      console.log(response.data);\n      this.setState({\n        registeredStudents: response.data //useremail\n\n      });\n    }).catch(err => {\n      console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n      window.alert('Error in connecting to server');\n    });\n  }\n\n  save() {\n    // console.log(\"clicked...\", this.state.chips, this.input);\n    this.input.amount = Math.round(parseInt(this.input.amount) / (this.state.chips.length + 1)); // for(let value of this.state.chips){\n    //   // console.log({username:this.props.user.username,user:value,inp:this.input});\n    //   instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\n    //     console.log(\"*****************************00\",resp.data.doc);\n    //     var action = userActionCreator(resp.data.doc,'AddUser');\n    //    store.dispatch(action);\n    //     this.props.friend();\n    //   })\n    // }\n\n    const output = [];\n    let tmp;\n\n    for (let i = 0; i < registeredStudents.length; i++) {\n      tmp = {\n        groupname: this.state.groupname,\n        email: userdata[i]\n      };\n      output.push(tmp);\n    }\n\n    const mean = amount / Groups.length;\n    const data = {\n      createdby: localStorage.getItem('email_current'),\n      description: description,\n      amount: amount,\n      billid: billid,\n      groupname: localStorage.getItem('groupname')\n    };\n    axios.post(`${serverIp}:${serverPort}/addExp`, data).then(response => {\n      console.log('Addgroup Response Data');\n      console.log(response.data);\n\n      if (response.data === 'Error') {\n        window.alert('Error while querying the Database');\n      } else {\n        window.alert('Successfully created the bill');\n      }\n    }).catch(err => {\n      console.log(`In catch of axios post call to add bill${err}`);\n      window.alert('Error in add exp API axios Post call');\n    }); // instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\n    //   console.log(\"*****************************00\",resp.data.doc);\n    //   var action = userActionCreator(resp.data.doc,'AddUser');\n    //  store.dispatch(action);\n    //   this.props.friend();\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"friendPopup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frnd-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frnd-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Add an expense\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"float-right\",\n      onClick: this.props.friend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"exp-inp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"With you and\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"exp-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"exp-inp2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"description\",\n      type: \"text\",\n      placeholder: \"Enter Description\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"amount\",\n      type: \"number\",\n      placeholder: \"Enter Amount\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"date\",\n      type: \"date\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pop-btn pop-btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn Add\",\n      onClick: this.save.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn cut\",\n      onClick: this.props.friend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, \"Close\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state is  \", state);\n  return {\n    user: state.user\n  };\n};\n\nconst fn = connect(mapStateToProps);\nexport default fn(AddExpense);","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/popups/addExpense.js"],"names":["React","connect","Chips","Chip","instance","store","userActionCreator","withRouter","axios","Groups","AddExpense","Component","constructor","props","onChange","chips","console","log","setState","state","input","registeredStudents","getdate","today","Date","getFullYear","getMonth","slice","getDate","componentDidMount","post","serverIp","serverPort","groupname","localStorage","getItem","then","response","data","catch","err","window","alert","save","amount","Math","round","parseInt","length","output","tmp","i","email","userdata","push","mean","createdby","description","billid","render","friend","e","target","id","value","bind","mapStateToProps","user","fn"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../../../styles/frndPop.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Chips, { Chip } from \"react-chips\";\r\nimport {instance} from \"../../../utils/AxiosConfig\";\r\nimport { store } from \"../../../redux/store\";\r\nimport { userActionCreator } from \"../../../redux/actionCreator/userAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Groups from \"../../Groups\";\r\n//import { serverIp, serverPort } from '../components/config';\r\nclass AddExpense extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = {};\r\n    this.state = {\r\n      chips: []\r\n    };\r\n    registeredStudents:[];\r\n  }\r\n  getdate() {\r\n    var today = new Date();\r\n\r\n    return (\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (\"0\" + (today.getMonth() + 1)).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + today.getDate()).slice(-2)\r\n    );\r\n  }\r\n  onChange = chips => {\r\n    console.log(chips);\r\n    this.setState({ ...this.state, chips });\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    axios.post(`${serverIp}:${serverPort}/getStudentsRegisteredInAEvent`, { groupname:localStorage.getItem('groupname') })\r\n      .then((response) => {\r\n        console.log('Response data in componentDidMount');\r\n        console.log(response.data);\r\n        this.setState({\r\n          registeredStudents: response.data,//useremail\r\n        });\r\n      }).catch((err) => {\r\n        console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\r\n        window.alert('Error in connecting to server');\r\n      });\r\n  }\r\n  save() {\r\n    // console.log(\"clicked...\", this.state.chips, this.input);\r\n    this.input.amount = Math.round(parseInt(this.input.amount)/(this.state.chips.length + 1));\r\n  \r\n    // for(let value of this.state.chips){\r\n    //   // console.log({username:this.props.user.username,user:value,inp:this.input});\r\n    //   instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\r\n    //     console.log(\"*****************************00\",resp.data.doc);\r\n    //     var action = userActionCreator(resp.data.doc,'AddUser');\r\n    //    store.dispatch(action);\r\n    //     this.props.friend();\r\n    //   })\r\n\r\n      \r\n    // }\r\n\r\n    \r\n    \r\n    const output=[];\r\n   let tmp;\r\n   \r\n   for(let i = 0; i < registeredStudents.length; i++){\r\n    tmp = {groupname : this.state.groupname,email:userdata[i] };\r\n    output.push(tmp);\r\n  }\r\n        const mean = amount / Groups.length; \r\n      \r\n      const data =\r\n        {\r\n          createdby :localStorage.getItem('email_current'),\r\n          description: description,\r\n          amount : amount,\r\n          billid: billid,\r\n          groupname:localStorage.getItem('groupname'),\r\n          \r\n        }\r\n      \r\n        \r\n       axios.post(`${serverIp}:${serverPort}/addExp`, data)\r\n      .then((response) => {\r\n        console.log('Addgroup Response Data');\r\n        console.log(response.data);\r\n      if (response.data === 'Error') {\r\n          window.alert('Error while querying the Database');\r\n        } else {\r\n          window.alert('Successfully created the bill'); \r\n\t\t     \r\n        }\r\n      }).catch((err) => {\r\n        console.log(`In catch of axios post call to add bill${err}`);\r\n        window.alert('Error in add exp API axios Post call');\r\n      });\r\n\r\n\r\n        // instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\r\n        //   console.log(\"*****************************00\",resp.data.doc);\r\n        //   var action = userActionCreator(resp.data.doc,'AddUser');\r\n        //  store.dispatch(action);\r\n        //   this.props.friend();\r\n        // })\r\n  \r\n        \r\n   \r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"friendPopup\">\r\n        <div className=\"frnd-content\">\r\n          <div className=\"frnd-header\">\r\n            <span>Add an expense</span>\r\n            <button className=\"float-right\" onClick={this.props.friend}>\r\n              <i class=\"fas fa-times\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"exp-inp\">\r\n            <label htmlFor=\"\">With you and</label>\r\n            {/* <input id = \"username\"  placeholder = \"Enter friend name\" className = \"exp-name\" type=\"text\"/> */}\r\n            <div className=\"exp-name\">\r\n              {/* <Chips\r\n                value={this.state.chips}\r\n                onChange={this.onChange}\r\n                suggestions={this.props.user.friends}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"exp-inp2\">\r\n            <input\r\n              id=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Description\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n            <input\r\n              id=\"amount\"\r\n              type=\"number\"\r\n              placeholder=\"Enter Amount\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n           <br/>\r\n           {/* value={this.getdate()} */}\r\n            <input\r\n              \r\n              id=\"date\"\r\n              type=\"date\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"pop-btn pop-btns\">\r\n            <button className=\"btn Add\" onClick={this.save.bind(this)}>\r\n              Save\r\n            </button>\r\n\r\n            <button className=\"btn cut\" onClick={this.props.friend}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"state is  \", state);\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst fn = connect(mapStateToProps);\r\nexport default fn(AddExpense);\r\n"]},"metadata":{},"sourceType":"module"}