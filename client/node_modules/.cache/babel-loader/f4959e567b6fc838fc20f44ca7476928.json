{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/popups/addExpense.js\";\nimport React from \"react\";\nimport \"../../../styles/frndPop.css\";\nimport Chips, { Chip } from \"react-chips\";\nimport { instance } from \"../../../utils/AxiosConfig\";\nimport { store } from \"../../../redux/store\";\nimport { userActionCreator } from \"../../../redux/actionCreator/userAction\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport Groups from \"../../Groups\";\nimport { serverIp, serverPort } from '../../../components/config';\n\nclass AddExpense extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = chips => {\n      console.log(chips);\n      this.setState({ ...this.state,\n        chips\n      });\n    };\n\n    this.input = {};\n    this.state = {\n      chips: [],\n      registeredStudents: [] //registeredStudents\n\n    };\n  }\n\n  getdate() {\n    var today = new Date();\n    return today.getFullYear() + \"-\" + (\"0\" + (today.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + today.getDate()).slice(-2);\n  }\n\n  componentDidMount() {\n    axios.post(`${serverIp}:${serverPort}/getStudentsRegisteredInAJob`, {\n      groupname: localStorage.getItem('email_current')\n    }).then(response => {\n      console.log('Response data in componentDidMount');\n      console.log(response.data);\n      this.setState({\n        registeredStudents: response.data //useremail\n\n      });\n    }).catch(err => {\n      console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\n      window.alert('Error in connecting to server');\n    });\n    console.log(this.state.registeredStudents);\n  }\n\n  save() {\n    // console.log(\"clicked...\", this.state.chips, this.input);\n    const mean = Math.round(parseInt(this.input.amount) / this.state.registeredStudents.length);\n    console.log(mean); // for(let value of this.state.chips){\n    //   // console.log({username:this.props.user.username,user:value,inp:this.input});\n    //   instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\n    //     console.log(\"*****************************00\",resp.data.doc);\n    //     var action = userActionCreator(resp.data.doc,'AddUser');\n    //    store.dispatch(action);\n    //     this.props.friend();\n    //   })\n    // }\n\n    if (sessionStorage.clickcount) {\n      sessionStorage.clickcount = Number(sessionStorage.clickcount) + 1;\n    } else {\n      sessionStorage.clickcount = 1;\n    }\n\n    const billId = sessionStorage.clickcount + 1;\n    const output = [];\n    let tmp;\n\n    for (let i = 0; i < this.state.registeredStudents.length; i++) {\n      if (this.state.registeredStudents[i].emailID === localStorage.getItem('email_current')) {\n        tmp = {\n          billId: billId,\n          groupname: \"world\",\n          amount: this.input.amount - mean,\n          description: this.input.description,\n          email: this.state.registeredStudents[i].emailID,\n          createddata: this.input.date,\n          paidby: localStorage.getItem('email_current')\n        };\n      } else {\n        tmp = {\n          billId: billId,\n          groupname: \"world\",\n          amount: -mean,\n          description: this.input.description,\n          email: this.state.registeredStudents[i].emailID,\n          createddata: this.input.date,\n          paidby: localStorage.getItem('email_current')\n        };\n      }\n\n      output.push(tmp);\n    }\n\n    console.log(output);\n    axios.post(`${serverIp}:${serverPort}/AddExp`, output).then(response => {\n      console.log('Addgroup Response Data');\n      console.log(response.data);\n\n      if (response.data === 'Error') {\n        window.alert('Error while querying the Database');\n      } else {\n        window.alert('Successfully created the bill');\n      }\n    }).catch(err => {\n      console.log(`In catch of axios post call to add bill${err}`);\n      window.alert('Error in add exp API axios Post call');\n    }); // instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\n    //   console.log(\"*****************************00\",resp.data.doc);\n    //   var action = userActionCreator(resp.data.doc,'AddUser');\n    //  store.dispatch(action);\n    //   this.props.friend();\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"friendPopup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frnd-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frnd-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Add an expense\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"float-right\",\n      onClick: this.props.friend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"exp-inp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"With you and\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"exp-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"exp-inp2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"description\",\n      type: \"text\",\n      placeholder: \"Enter Description\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"amount\",\n      type: \"number\",\n      placeholder: \"Enter Amount\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"date\",\n      type: \"date\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pop-btn pop-btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn Add\",\n      onClick: this.save.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn cut\",\n      onClick: this.props.friend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"Close\"))));\n  }\n\n}\n\nexport default AddExpense;","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Dashboard/popups/addExpense.js"],"names":["React","Chips","Chip","instance","store","userActionCreator","withRouter","axios","Groups","serverIp","serverPort","AddExpense","Component","constructor","props","onChange","chips","console","log","setState","state","input","registeredStudents","getdate","today","Date","getFullYear","getMonth","slice","getDate","componentDidMount","post","groupname","localStorage","getItem","then","response","data","catch","err","window","alert","save","mean","Math","round","parseInt","amount","length","sessionStorage","clickcount","Number","billId","output","tmp","i","emailID","description","email","createddata","date","paidby","push","render","friend","e","target","id","value","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../../../styles/frndPop.css\";\r\nimport Chips, { Chip } from \"react-chips\";\r\nimport {instance} from \"../../../utils/AxiosConfig\";\r\nimport { store } from \"../../../redux/store\";\r\nimport { userActionCreator } from \"../../../redux/actionCreator/userAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Groups from \"../../Groups\";\r\nimport { serverIp, serverPort } from '../../../components/config';\r\nclass AddExpense extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = {};\r\n    this.state = {\r\n      chips: [],\r\n      registeredStudents:[]\r\n //registeredStudents\r\n    };\r\n    \r\n  }\r\n  getdate() {\r\n    var today = new Date();\r\n\r\n    return (\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (\"0\" + (today.getMonth() + 1)).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + today.getDate()).slice(-2)\r\n    );\r\n  }\r\n  onChange = chips => {\r\n    console.log(chips);\r\n    this.setState({ ...this.state, chips });\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    axios.post(`${serverIp}:${serverPort}/getStudentsRegisteredInAJob`, { groupname: localStorage.getItem('email_current') })\r\n      .then((response) => {\r\n        console.log('Response data in componentDidMount');\r\n        console.log(response.data);\r\n        this.setState({\r\n         registeredStudents: response.data,//useremail\r\n        });\r\n      }).catch((err) => {\r\n        console.log(`Error in componentDidMount of RegisteredStudents: ${err}`);\r\n        window.alert('Error in connecting to server');\r\n      });\r\n      console.log(this.state.registeredStudents);\r\n  }\r\n  save() {\r\n    // console.log(\"clicked...\", this.state.chips, this.input);\r\n    const mean = Math.round(parseInt(this.input.amount)/(this.state.registeredStudents.length ));\r\n    console.log(mean);\r\n    \r\n    // for(let value of this.state.chips){\r\n    //   // console.log({username:this.props.user.username,user:value,inp:this.input});\r\n    //   instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\r\n    //     console.log(\"*****************************00\",resp.data.doc);\r\n    //     var action = userActionCreator(resp.data.doc,'AddUser');\r\n    //    store.dispatch(action);\r\n    //     this.props.friend();\r\n    //   })\r\n\r\n      \r\n    // }\r\n\r\n    \r\n      if (sessionStorage.clickcount) {\r\n        sessionStorage.clickcount = Number(sessionStorage.clickcount)+1;\r\n      } else {\r\n        sessionStorage.clickcount = 1;\r\n      }\r\n    const billId = sessionStorage.clickcount +1;\r\n    \r\n    \r\n    const output=[];\r\n   let tmp;\r\n   \r\n   for(let i = 0; i < this.state.registeredStudents.length; i++){\r\n     if(this.state.registeredStudents[i].emailID === localStorage.getItem('email_current'))\r\n     {\r\n   tmp = {billId:billId,groupname: \"world\",amount: (this.input.amount - mean),description:this.input.description,email:this.state.registeredStudents[i].emailID,createddata:this.input.date,paidby: localStorage.getItem('email_current') };\r\n     }\r\n     else{\r\n      tmp = {billId:billId, groupname: \"world\",amount: (- mean),description:this.input.description,email:this.state.registeredStudents[i].emailID,createddata:this.input.date,paidby: localStorage.getItem('email_current') };\r\n     }\r\n    output.push(tmp);\r\n  }\r\n        \r\n    \r\n      console.log(output);\r\n      \r\n      \r\n        \r\n       axios.post(`${serverIp}:${serverPort}/AddExp`, output)\r\n      .then((response) => {\r\n        console.log('Addgroup Response Data');\r\n        console.log(response.data);\r\n      if (response.data === 'Error') {\r\n          window.alert('Error while querying the Database');\r\n        } else {\r\n          window.alert('Successfully created the bill'); \r\n\t\t     \r\n        }\r\n      }).catch((err) => {\r\n        console.log(`In catch of axios post call to add bill${err}`);\r\n        window.alert('Error in add exp API axios Post call');\r\n      });\r\n\r\n\r\n        // instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\r\n        //   console.log(\"*****************************00\",resp.data.doc);\r\n        //   var action = userActionCreator(resp.data.doc,'AddUser');\r\n        //  store.dispatch(action);\r\n        //   this.props.friend();\r\n        // })\r\n  \r\n        \r\n   \r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"friendPopup\">\r\n        <div className=\"frnd-content\">\r\n          <div className=\"frnd-header\">\r\n            <span>Add an expense</span>\r\n            <button className=\"float-right\" onClick={this.props.friend}>\r\n              <i class=\"fas fa-times\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"exp-inp\">\r\n            <label htmlFor=\"\">With you and</label>\r\n            {/* <input id = \"username\"  placeholder = \"Enter friend name\" className = \"exp-name\" type=\"text\"/> */}\r\n            <div className=\"exp-name\">\r\n              {/* <Chips\r\n                value={this.state.chips}\r\n                onChange={this.onChange}\r\n                suggestions={this.props.user.friends}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"exp-inp2\">\r\n            <input\r\n              id=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Description\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n            <input\r\n              id=\"amount\"\r\n              type=\"number\"\r\n              placeholder=\"Enter Amount\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n           <br/>\r\n           {/* value={this.getdate()} */}\r\n            <input\r\n              \r\n              id=\"date\"\r\n              type=\"date\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"pop-btn pop-btns\">\r\n            <button className=\"btn Add\" onClick={this.save.bind(this)}>\r\n              Save\r\n            </button>\r\n\r\n            <button className=\"btn cut\" onClick={this.props.friend}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default (AddExpense);\r\n"]},"metadata":{},"sourceType":"module"}