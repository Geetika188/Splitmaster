{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/containers/transactionma.js\";\nimport React from 'react'; // import {connect} from 'react-redux';\n\nimport DashHeader from '../components/DashHeader';\nimport { AddFriend } from '../components/Dashboard/AddFriends';\nimport Grouptransaction from '../components/Dashboard/Grouptransaction'; //import { serverIp, serverPort } from '../components/config';\n// import {userActionCreator} from \"../redux/actionCreator/userAction\";\n// import { store } from \"../redux/store\"\n//import  Friend  from '../components/Dashboard/popups/Friend';//invittaion no wale \n//import \"../styles/Dashboard.css\"\n\nimport Result from '../components/Dashboard/Grouptransaction';\nimport AddExpense from '../components/Dashboard/popups/addExpense'; //import SettleUp  from '../components/Dashboard/popups/settleUp';\n\nexport class transactionma extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showExp: true\n    };\n  } // alwaysRun(email_current){\n  //   console.log(\"this is username ...........\",email_current);\n  // //   if(username != undefined){\n  // //     instance.post('/getData',{username: username}).then((resp)=>{\n  // //                        console.log(\"this is response\",resp.data.user);\n  // //                        var action = userActionCreator(resp.data.user,'AddUser');\n  // //                        store.dispatch(action);\n  // //                    })\n  // //   }\n  // }  \n  //  componentWillReceiveProps(nextprops){\n  //      let oldState = this.props.userInfo;\n  //      console.log(\"old state length \",oldState.friends.length);\n  //      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\n  //     if(oldState.friends.length != nextprops.userInfo.friends.length){\n  //         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //                console.log(\"this is response\",resp.data.user);\n  //                var action = userActionCreator(resp.data.user,'AddUser');\n  //                store.dispatch(action);\n  //            })\n  //         oldState = nextprops.userInfo;\n  //     }\n  //     console.log(\"old state length \",oldState.friends.length);\n  //     // console.log(\"will Mount \",nextprops.userInfo);\n  //     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //     //            console.log(\"this is response\",resp.data.user);\n  //     //            var action = userActionCreator(resp.data.user,'AddUser');\n  //     //            store.dispatch(action);\n  //     //        })\n  //  }   \n  // componentDidMount(){\n  //     console.log(\"will Mount********************************************** \",localStorage.email_current);\n  //    instance.post('/getData',{username: localStorage.username}).then((resp)=>{\n  //        console.log(\"this is response\",resp.data.user);\n  //        var action = userActionCreator(resp.data.user,'AddUser');\n  //        store.dispatch(action);\n  //    })\n  // }\n  // //get data bill of current user \n  // //get invitation no wale data  from grouplist\n  // //show invitaion data\n  // // showFriend(){\n  // //      this.setState({...this.state,showFriend: !this.state.showFriend});\n  // //      console.log(this.state.showFriend);\n  // // }\n\n\n  showExpense() {\n    this.setState({ ...this.state,\n      showExp: !this.state.showExp\n    });\n    console.log(this.state.showExp);\n  } // // settle(){\n  // //     this.setState({...this.state,settleUp: !this.state.settleUp});\n  // //     console.log(this.state.settleUp);\n  // // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DashHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), this.state.showExp && /*#__PURE__*/React.createElement(AddExpense, {\n      friend: this.showExpense.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grouptransaction, {\n      friend: this.showExpense.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Result, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/containers/transactionma.js"],"names":["React","DashHeader","AddFriend","Grouptransaction","Result","AddExpense","transactionma","Component","constructor","props","state","showExp","showExpense","setState","console","log","render","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,OAAQC,gBAAR,MAA+B,0CAA/B,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,UAAP,MAAuB,2CAAvB,C,CACA;;AAEA,OAAO,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA2C;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACb,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAb;AAEJ,GAL6C,CAO9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;AACAC,EAAAA,WAAW,GAAE;AACT,SAAKC,QAAL,CAAc,EAAC,GAAG,KAAKH,KAAT;AAAeC,MAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApC,KAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,OAAvB;AACH,GA5DiD,CA8DlD;AACA;AACA;AACA;;;AACAK,EAAAA,MAAM,GAAE;AAEJ,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAKI,KAAKN,KAAL,CAAWC,OAAX,iBAAsB,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAI,KAAKC,WAAL,CAAiBK,IAAjB,CAAsB,IAAtB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL1B,eAQI;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA,oBAAC,gBAAD;AAAmB,MAAA,MAAM,EAAI,KAAKL,WAAL,CAAiBK,IAAjB,CAAsB,IAAtB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALA,CARJ,CADA;AAoBH;;AAxFiD","sourcesContent":["import React from 'react';\n// import {connect} from 'react-redux';\nimport DashHeader from '../components/DashHeader';\nimport { AddFriend } from '../components/Dashboard/AddFriends';\nimport  Grouptransaction  from '../components/Dashboard/Grouptransaction';\n//import { serverIp, serverPort } from '../components/config';\n// import {userActionCreator} from \"../redux/actionCreator/userAction\";\n// import { store } from \"../redux/store\"\n//import  Friend  from '../components/Dashboard/popups/Friend';//invittaion no wale \n//import \"../styles/Dashboard.css\"\nimport Result from '../components/Dashboard/Grouptransaction';\nimport AddExpense from '../components/Dashboard/popups/addExpense';\n//import SettleUp  from '../components/Dashboard/popups/settleUp';\n\nexport class transactionma extends React.Component{\n    constructor(props){\n         super(props);\n         this.state = {showExp:true}\n\n    }\n\n    // alwaysRun(email_current){\n    //   console.log(\"this is username ...........\",email_current);\n    // //   if(username != undefined){\n    // //     instance.post('/getData',{username: username}).then((resp)=>{\n    // //                        console.log(\"this is response\",resp.data.user);\n    // //                        var action = userActionCreator(resp.data.user,'AddUser');\n    // //                        store.dispatch(action);\n    // //                    })\n    // //   }\n    // }  \n//  componentWillReceiveProps(nextprops){\n//      let oldState = this.props.userInfo;\n//      console.log(\"old state length \",oldState.friends.length);\n//      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\n\n\n//     if(oldState.friends.length != nextprops.userInfo.friends.length){\n//         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\n//                console.log(\"this is response\",resp.data.user);\n//                var action = userActionCreator(resp.data.user,'AddUser');\n//                store.dispatch(action);\n//            })\n//         oldState = nextprops.userInfo;\n//     }\n//     console.log(\"old state length \",oldState.friends.length);\n\n//     // console.log(\"will Mount \",nextprops.userInfo);\n//     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\n//     //            console.log(\"this is response\",resp.data.user);\n//     //            var action = userActionCreator(resp.data.user,'AddUser');\n//     //            store.dispatch(action);\n//     //        })\n//  }   \n// componentDidMount(){\n//     console.log(\"will Mount********************************************** \",localStorage.email_current);\n//    instance.post('/getData',{username: localStorage.username}).then((resp)=>{\n//        console.log(\"this is response\",resp.data.user);\n//        var action = userActionCreator(resp.data.user,'AddUser');\n//        store.dispatch(action);\n//    })\n// }\n// //get data bill of current user \n// //get invitation no wale data  from grouplist\n// //show invitaion data\n\n\n// // showFriend(){\n// //      this.setState({...this.state,showFriend: !this.state.showFriend});\n// //      console.log(this.state.showFriend);\n// // }\nshowExpense(){\n    this.setState({...this.state,showExp: !this.state.showExp});\n    console.log(this.state.showExp);\n}  \n\n// // settle(){\n// //     this.setState({...this.state,settleUp: !this.state.settleUp});\n// //     console.log(this.state.settleUp);\n// // }\nrender(){\n    \n    return(\n    <div >\n        {/* {this.alwaysRun(this.props.userInfo.username)} */}\n        <DashHeader/>\n        \n        {/* {this.state.showFriend && <Friend friend = {this.showFriend.bind(this)}/>} */}\n       {this.state.showExp && <AddExpense friend = {this.showExpense.bind(this)}/>}\n        {/* {this.state.settleUp && <SettleUp friend = {this.settle.bind(this)}/>} */}\n        \n        <div className =\"flex\">\n        {/* <AddFriend  friend = {this.showFriend.bind(this)}/> */}\n        {/* <Grouptransaction friend = {this.showExpense.bind(this)} settle = {this.settle.bind(this)}/> */}\n        \n        <Grouptransaction  friend = {this.showExpense.bind(this)}/>\n        <div>\n            <Result/>\n        </div>\n        </div>\n    </div>\n)\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}