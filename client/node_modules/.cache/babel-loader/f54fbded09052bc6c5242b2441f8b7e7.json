{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Recentactivity.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/Dashboard.css\";\nimport { NavLink } from 'react-router-dom';\nimport { serverIp, serverPort } from '../components/config';\nimport axios from 'axios';\nimport { Card, Modal, Image } from 'react-bootstrap';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Dropdown from 'react-dropdown';\nimport { useParams } from \"react-router-dom\";\n\nclass Recentactivity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: '',\n      registeredStudents: [],\n      userOption: ['Asc', 'Desc']\n    };\n    this.onChangeSelectedOptionHandler = this.onChangeSelectedOptionHandler.bind(this);\n    this.returnRegisteredStudents = this.returnRegisteredStudents.bind(this);\n  }\n\n  componentDidMount() {\n    axios.post(`${serverIp}:${serverPort}/gettransactionsdatatot`) // axios.post(`${serverIp}:${serverPort}/gettransactionsdata`)\n    .then(response => {\n      console.log('Response data in componentDidMount');\n      console.log(response.data);\n      this.setState({\n        registeredStudents: response.data\n      });\n    }).catch(err => {\n      console.log(`Error in componentDidMount of fetchdata: ${err}`);\n      window.alert('Error in connecting to server');\n    });\n  }\n\n  onChangeUserHandler(e) {\n    this.setState({\n      user: e.value\n    });\n  }\n\n  onChangeSelectedOptionHandler(e) {\n    this.setState({\n      selectedOption: e.value\n    });\n  }\n\n  returnRegisteredStudents() {\n    console.log(this.state.registeredStudents);\n\n    if (this.state.SelectedOption == 'Asc') {\n      return this.state.registeredStudents.map(eachStudent => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: `wrapper-gradient-${this.state.selectedOption == 'Asc' ? 'Asc' : 'Des'}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          border: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, ' ', ' '), /*#__PURE__*/React.createElement(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }\n        }, \"Career Objective\"), ' ', /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }\n        }), eachStudent.billid))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }\n        }))));\n      });\n    } else {\n      return this.state.registeredStudents.reverse().map(eachStudent => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: `wrapper-gradient-${this.state.selectedOption == 'Asc' ? 'Asc' : 'Des'}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          border: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }\n        }, ' ', ' '), /*#__PURE__*/React.createElement(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 23\n          }\n        }, \"Career Objective\"), ' ', /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }\n        }), eachStudent.billid))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }))));\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      options: this.state.userOption,\n      onChange: this.onChangeSelectedOptionHandler,\n      value: this.state.selectedOption,\n      placeholder: \"Sort\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 6\n      }\n    }), this.returnRegisteredStudents());\n  }\n\n}\n\nexport default Recentactivity;","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/components/Recentactivity.js"],"names":["React","connect","NavLink","serverIp","serverPort","axios","Card","Modal","Image","Dropdown","useParams","Recentactivity","Component","constructor","props","state","selectedOption","registeredStudents","userOption","onChangeSelectedOptionHandler","bind","returnRegisteredStudents","componentDidMount","post","then","response","console","log","data","setState","catch","err","window","alert","onChangeUserHandler","e","user","value","SelectedOption","map","eachStudent","billid","reverse","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/Dashboard.css\";\nimport {NavLink} from 'react-router-dom';\nimport { serverIp, serverPort } from '../components/config';\nimport axios from 'axios';\nimport {\n  Card, Modal, Image,\n} from 'react-bootstrap';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Dropdown from 'react-dropdown';\nimport {  \n  useParams\n} from \"react-router-dom\";\n\n\n class Recentactivity extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOption: '',\n            registeredStudents: [],\n            userOption: ['Asc', 'Desc'],\n        };\n        this.onChangeSelectedOptionHandler = this.onChangeSelectedOptionHandler.bind(this);\n        this.returnRegisteredStudents = this.returnRegisteredStudents.bind(this);\n       \n      }\n    \n\n      componentDidMount() {\n       \n        axios.post(`${serverIp}:${serverPort}/gettransactionsdatatot`)\n       // axios.post(`${serverIp}:${serverPort}/gettransactionsdata`)\n          .then((response) => {\n            console.log('Response data in componentDidMount');\n            console.log(response.data);\n            \n            this.setState({\n              registeredStudents: response.data,\n            });\n          }).catch((err) => {\n            console.log(`Error in componentDidMount of fetchdata: ${err}`);\n            window.alert('Error in connecting to server');\n          });\n       \n        }\n      \n        onChangeUserHandler(e) {\n            this.setState({\n              user: e.value,\n            });\n          }\n        onChangeSelectedOptionHandler(e) {\n            this.setState({\n              selectedOption: e.value,\n            });\n          }\n\nreturnRegisteredStudents() {\n\n  console.log(this.state.registeredStudents);\n  if(this.state.SelectedOption == 'Asc')\n  {\n  return this.state.registeredStudents.map((eachStudent) => {\n    \n    return (\n       \n      <div className ={`wrapper-gradient-${this.state.selectedOption == 'Asc'?'Asc':'Des'}`}>\n      \n        <div>\n        \n          <div>\n            <Card border=\"primary\">\n              <Card.Body>\n                <Card.Title>\n                  \n                  {' '}\n                  {' '}\n                \n                </Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                \n                </Card.Subtitle>\n                <Card.Text>\n                  <b>Career Objective</b>\n                  {' '}\n                  <br />\n                  {eachStudent.billid}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <br />\n          </div>\n          \n             \n              \n          \n        </div>\n        </div>\n    );\n  });\n}\nelse{\n    return this.state.registeredStudents.reverse().map((eachStudent) => {\n    \n        return (\n           \n          <div className ={`wrapper-gradient-${this.state.selectedOption == 'Asc'?'Asc':'Des'}`}>\n          \n            <div>\n            \n              <div>\n                <Card border=\"primary\">\n                  <Card.Body>\n                    <Card.Title>\n                      \n                      {' '}\n                      {' '}\n                    \n                    </Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                    \n                    </Card.Subtitle>\n                    <Card.Text>\n                      <b>Career Objective</b>\n                      {' '}\n                      <br />\n                      {eachStudent.billid}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n                <br />\n              </div>\n              \n                 \n                  \n              \n            </div>\n            </div>\n        );\n      });\n    }\n\n}\nrender(){\n   return (\n    <div>\n     <Dropdown\n                            options={this.state.userOption}\n                            onChange={this.onChangeSelectedOptionHandler}\n                            value={this.state.selectedOption}\n                            placeholder=\"Sort\"\n                          />\n      {this.returnRegisteredStudents()}\n    </div>\n    \n\n\n  );\n   }\n   \n}\n    \n export default Recentactivity;\n \n\n "]},"metadata":{},"sourceType":"module"}