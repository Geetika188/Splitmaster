{"ast":null,"code":"var _jsxFileName = \"/Users/geetikakapil/Documents/Split master/splitwise2/client/src/containers/Dashboard.js\";\nimport React from 'react'; // import {connect} from 'react-redux';\n\nimport DashHeader from '../components/DashHeader';\nimport AddFriends from '../components/Dashboard/AddFriends';\nimport Middle from '../components/Dashboard/MiddleDashboard';\nimport { instance } from '../utils/AxiosConfig';\nimport { userActionCreator } from \"../redux/actionCreator/userAction\";\nimport { store } from \"../redux/store\";\nimport Friend from '../components/Dashboard/popups/Friend';\nimport \"../styles/Dashboard.css\";\nimport AddExpense from '../components/Dashboard/popups/addExpense';\nimport SettleUp from '../components/Dashboard/popups/settleUp';\nimport Invitation from '../components/Dashboard/Invitation';\nimport { serverIp, serverPort } from '../components/config';\nimport axios from 'axios';\nexport class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showFriend: false,\n      showExp: false,\n      settleUp: false,\n      mainarray: []\n    };\n  }\n\n  alwaysRun(username) {\n    console.log(\"this is username ...........\", username); //   if(username != undefined){\n    //     instance.post('/getData',{username: username}).then((resp)=>{\n    //                        console.log(\"this is response\",resp.data.user);\n    //                        var action = userActionCreator(resp.data.user,'AddUser');\n    //                        store.dispatch(action);\n    //                    })\n    //   }\n  } //  componentWillReceiveProps(nextprops){\n  //      let oldState = this.props.userInfo;\n  //      console.log(\"old state length \",oldState.friends.length);\n  //      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\n  //     if(oldState.friends.length != nextprops.userInfo.friends.length){\n  //         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //                console.log(\"this is response\",resp.data.user);\n  //                var action = userActionCreator(resp.data.user,'AddUser');\n  //                store.dispatch(action);\n  //            })\n  //         oldState = nextprops.userInfo;\n  //     }\n  //     console.log(\"old state length \",oldState.friends.length);\n  //     // console.log(\"will Mount \",nextprops.userInfo);\n  //     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //     //            console.log(\"this is response\",resp.data.user);\n  //     //            var action = userActionCreator(resp.data.user,'AddUser');\n  //     //            store.dispatch(action);\n  //     //        })\n  //  }   \n\n\n  componentDidMount() {\n    console.log(\"will Mount********************************************** \", localStorage.username); //    instance.post('/getData',{username: localStorage.username}).then((resp)=>{\n    //        console.log(\"this is response\",resp.data.user);\n    //        var action = userActionCreator(resp.data.user,'AddUser');\n    //        store.dispatch(action);\n    // })\n    //const mainarray=[];\n\n    axios.post(`${serverIp}:${serverPort}/getuserdata`).then(response => {\n      console.log('AddUsergroup Response Data');\n      console.log(response.data);\n\n      if (response.data === 'Error') {\n        window.alert('Error while querying the Database');\n      } else {\n        window.alert('Successfully Added the Usergroup'); //     response.data.map(a => hintArrayname.push(a.username))\n        //    response.data.map(a => hintArrayemail.push(a.emailId))\n        //    response.data.map(a => mainarrayy.push(a.username))\n        // response.data.map(a => mainarray.push(a))\n\n        this.setState({\n          // autosuggestname : hintArrayname,\n          //  mainarray : mainarrayy\n          mainarray: response.data\n        }); // this.setState({\n        //   autosuggestemail : hintArrayemail,\n        // });\n      }\n    }).catch(err => {\n      console.log(`In catch of axios post call to get user data ${err}`);\n      window.alert('Error in Add USERgroup API axios Post call');\n    }); //console.log({thus.state.mainarray});\n    // console.log(this.state)\n    // const happy =[{a:1}];\n    // console.log(happy);\n  }\n\n  showFriend() {\n    this.setState({ ...this.state,\n      showFriend: !this.state.showFriend\n    });\n    console.log(this.state.showFriend);\n  }\n\n  showExpense() {\n    this.setState({ ...this.state,\n      showExp: !this.state.showExp\n    });\n    console.log(this.state.showExp);\n  }\n\n  settle() {\n    this.setState({ ...this.state,\n      settleUp: !this.state.settleUp\n    });\n    console.log(this.state.settleUp);\n  }\n\n  render() {\n    const values = [];\n    this.state.mainarray.map(eachEvent => values.push(eachEvent.username));\n    console.log(values);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DashHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }), this.state.showFriend && /*#__PURE__*/React.createElement(Friend, {\n      friend: this.showFriend.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 35\n      }\n    }), this.state.showExp && /*#__PURE__*/React.createElement(AddExpense, {\n      friend: this.showExpense.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 32\n      }\n    }), this.state.settleUp && this.state.mainarray.map(eachEvent => /*#__PURE__*/React.createElement(SettleUp, {\n      eve: eachEvent.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddFriends, {\n      friend: this.showFriend.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Middle, {\n      friend: this.showExpense.bind(this),\n      settle: this.settle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Invitation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/geetikakapil/Documents/Split master/splitwise2/client/src/containers/Dashboard.js"],"names":["React","DashHeader","AddFriends","Middle","instance","userActionCreator","store","Friend","AddExpense","SettleUp","Invitation","serverIp","serverPort","axios","Dashboard","Component","constructor","props","state","showFriend","showExp","settleUp","mainarray","alwaysRun","username","console","log","componentDidMount","localStorage","post","then","response","data","window","alert","setState","catch","err","showExpense","settle","render","values","map","eachEvent","push","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import {connect} from 'react-redux';\r\nimport DashHeader from '../components/DashHeader';\r\nimport AddFriends  from '../components/Dashboard/AddFriends';\r\nimport  Middle  from '../components/Dashboard/MiddleDashboard';\r\nimport {instance} from '../utils/AxiosConfig';\r\nimport {userActionCreator} from \"../redux/actionCreator/userAction\";\r\nimport { store } from \"../redux/store\"\r\nimport  Friend  from '../components/Dashboard/popups/Friend';\r\nimport \"../styles/Dashboard.css\"\r\nimport AddExpense from '../components/Dashboard/popups/addExpense';\r\nimport SettleUp  from '../components/Dashboard/popups/settleUp';\r\nimport Invitation from '../components/Dashboard/Invitation';\r\nimport { serverIp, serverPort } from '../components/config';\r\nimport axios from 'axios';\r\nexport class Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = \r\n        {\r\n    showFriend: false,\r\n    showExp:false,\r\n    settleUp: false,\r\n     mainarray:[],\r\n}\r\n\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    alwaysRun(username){\r\n      console.log(\"this is username ...........\",username);\r\n    //   if(username != undefined){\r\n    //     instance.post('/getData',{username: username}).then((resp)=>{\r\n    //                        console.log(\"this is response\",resp.data.user);\r\n    //                        var action = userActionCreator(resp.data.user,'AddUser');\r\n    //                        store.dispatch(action);\r\n    //                    })\r\n    //   }\r\n    }  \r\n//  componentWillReceiveProps(nextprops){\r\n//      let oldState = this.props.userInfo;\r\n//      console.log(\"old state length \",oldState.friends.length);\r\n//      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\r\n\r\n\r\n//     if(oldState.friends.length != nextprops.userInfo.friends.length){\r\n//         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\r\n//                console.log(\"this is response\",resp.data.user);\r\n//                var action = userActionCreator(resp.data.user,'AddUser');\r\n//                store.dispatch(action);\r\n//            })\r\n//         oldState = nextprops.userInfo;\r\n//     }\r\n//     console.log(\"old state length \",oldState.friends.length);\r\n\r\n//     // console.log(\"will Mount \",nextprops.userInfo);\r\n//     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\r\n//     //            console.log(\"this is response\",resp.data.user);\r\n//     //            var action = userActionCreator(resp.data.user,'AddUser');\r\n//     //            store.dispatch(action);\r\n//     //        })\r\n//  }   \r\ncomponentDidMount(){\r\n    console.log(\"will Mount********************************************** \",localStorage.username);\r\n//    instance.post('/getData',{username: localStorage.username}).then((resp)=>{\r\n//        console.log(\"this is response\",resp.data.user);\r\n//        var action = userActionCreator(resp.data.user,'AddUser');\r\n//        store.dispatch(action);\r\n  // })\r\n\r\n//const mainarray=[];\r\naxios.post(`${serverIp}:${serverPort}/getuserdata`)\r\n.then((response) => {\r\n  console.log('AddUsergroup Response Data');\r\n  console.log(response.data);\r\nif (response.data === 'Error') {\r\n    window.alert('Error while querying the Database');\r\n  } else {\r\n    window.alert('Successfully Added the Usergroup'); \r\n\r\n//     response.data.map(a => hintArrayname.push(a.username))\r\n//    response.data.map(a => hintArrayemail.push(a.emailId))\r\n//    response.data.map(a => mainarrayy.push(a.username))\r\n   // response.data.map(a => mainarray.push(a))\r\n    this.setState({\r\n    // autosuggestname : hintArrayname,\r\n    //  mainarray : mainarrayy\r\n    mainarray : response.data,\r\n    });\r\n    // this.setState({\r\n    //   autosuggestemail : hintArrayemail,\r\n    // });\r\n  }\r\n}).catch((err) => {\r\n  console.log(`In catch of axios post call to get user data ${err}`);\r\n  window.alert('Error in Add USERgroup API axios Post call');\r\n});\r\n//console.log({thus.state.mainarray});\r\n\r\n// console.log(this.state)\r\n// const happy =[{a:1}];\r\n// console.log(happy);\r\n\r\n}\r\n\r\nshowFriend(){\r\n     this.setState({...this.state,showFriend: !this.state.showFriend});\r\n     console.log(this.state.showFriend);\r\n}\r\nshowExpense(){\r\n    this.setState({...this.state,showExp: !this.state.showExp});\r\n    console.log(this.state.showExp);\r\n}  \r\n\r\nsettle(){\r\n    this.setState({...this.state,settleUp: !this.state.settleUp});\r\n    console.log(this.state.settleUp);\r\n}\r\nrender(){\r\n    const values =[];\r\n    this.state.mainarray.map((eachEvent) => values.push(eachEvent.username))\r\n    console.log(values);\r\n    return(\r\n    <div >\r\n        {/* {this.alwaysRun(this.props.userInfo.username)} */}\r\n        <DashHeader/>\r\n        \r\n        {this.state.showFriend && <Friend friend = {this.showFriend.bind(this)}/>}\r\n        {this.state.showExp && <AddExpense friend = {this.showExpense.bind(this)}/>}\r\n        {this.state.settleUp && this.state.mainarray.map((eachEvent) => <SettleUp eve={eachEvent.username} />)}\r\n        \r\n        <div className =\"flex\">\r\n        <AddFriends  friend = {this.showFriend.bind(this)}/>\r\n        \r\n        <Middle friend = {this.showExpense.bind(this)} settle = {this.settle.bind(this)}/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <Invitation/>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}